sudo: required

language: go

services:
  - docker

go:
  - master

before_install:
  # install goveralls
  - go get github.com/mattn/goveralls
  # dump this step once multi-stage builds hit stable docker
  - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
  - sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
  - sudo apt-get update
  - sudo apt-get -y install docker-ce
  # this stays after the above goes away
  - docker build -t api_test -f api/test.Dockerfile .

script:
  # unit tests
  - docker run --name api_test --rm api_test
  # integration tests
  - docker-compose --file docker-compose-test.yml up --abort-on-container-exit --build --remove-orphans --force-recreate
  # coverage output
  - go test github.com/dairycart/dairycart/api -coverprofile=coverage.out -tags test
  # ensure README is up to date
  - go run tools/integration_tests_checklist/main.go

after_success:
  - $HOME/gopath/bin/goveralls -coverprofile=coverage.out -service=travis-ci -repotoken $COVERALLS_TOKEN
  # yuge thanks to this blog post: https://sebest.github.io/post/using-travis-ci-to-build-docker-images/
  - docker login --username=$DOCKER_USER --password=$DOCKER_PASS
  # I'm only doing pre-alpha tags for the moment, but if I were doing versioned tags, it might look something like this:
  #   - export TAG=`if [ "$TRAVIS_BRANCH" == "master" ]; then echo "latest"; else echo $TRAVIS_BRANCH ; fi`
  - (cd api; docker build --no-cache --tag dairycart/api-server:pre-alpha .)
  - if [ "$TRAVIS_BRANCH" == "master" ]; then docker push dairycart/api-server:pre-alpha; else echo $TRAVIS_BRANCH ; fi