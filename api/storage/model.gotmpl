package models

{{ $modelName := pascal (trimSuffix .Table.Name "s") -}}
{{- $allColumns := join (.Table.Columns.Names.Sprintf "%s") ", " -}}

import(
    {{ if or (contains $allColumns "archived_on") (contains $allColumns "executed_on") }}
        "time"
    {{ else if contains $allColumns "created_on" }}
        "time"
    {{ end }}
)

// {{ $modelName }} represents a Dairycart {{ toLower $modelName }}
type {{ $modelName }} struct {
    {{- range .Table.Columns }}
        {{- if contains (pascal .Name) "Quantity" }}
            {{ pascal .Name }} uint32 `json:"{{ snake .Name }}"` // {{ .DBName }}
        {{- else if eq (pascal .Name) "Upc" }}
            {{ "UPC" }} {{ .Type }} `json:"{{ snake .Name }}"` // {{ .DBName }}
        {{- else if eq (pascal .Name) "Sku" }}
            {{ "SKU" }} {{ .Type }} `json:"{{ snake .Name }}"` // {{ .DBName }}
        {{- else if eq (pascal .Name) "SkuPrefix" }}
            {{ "SKUPrefix" }} {{ .Type }} `json:"{{ snake .Name }}"` // {{ .DBName }}
        {{- else if eq .Type "" }}
            /* putting this here so that go fmt/build/etc will barf when they encounter it and I'll know to fix it */
            ({{ pascal .Name }} {{ .Type }} `json:"{{ snake .Name }}"` // {{ .DBName }})
            something bad has happened here
        {{- else }}
            {{ pascal .Name }} {{ .Type }} `json:"{{ snake .Name }}"` // {{ .DBName }}
        {{- end }}
    {{- end -}}

    {{ if eq $modelName "ProductRoot" -}}
    {{ "\n" }}
    // useful for responses
    // TODO: make this a slice of non-pointers
	Options  []ProductOption `json:"options"`
	Products []Product        `json:"products"`
    {{ else if eq $modelName "ProductOption" -}}
    {{ "\n" }}
    // useful for responses
	Values        []ProductOptionValue `json:"values"`
    {{ else if eq $modelName "Product" -}}
    {{ "\n" }}
    // useful for responses
	ApplicableOptionValues []ProductOptionValue `json:"applicable_options,omitempty"`
    {{ end }}
}

{{ if eq $modelName "Product" }}
// {{ $modelName }}CreationInput is a struct that represents a product creation body
type {{ $modelName }}CreationInput struct {
    {{- range .Table.Columns }}
        {{- if contains (pascal .Name) "Quantity" }}
            {{ pascal .Name }} uint32 `json:"{{ snake .Name }}"` // {{ .DBName }}
        {{- else if eq (pascal .Name) "Upc" }}
            {{ "UPC" }} {{ .Type }} `json:"{{ snake .Name }}"` // {{ .DBName }}
        {{- else if eq (pascal .Name) "Sku" }}
            {{ "SKU" }} {{ .Type }} `json:"{{ snake .Name }}"` // {{ .DBName }}
        {{- else if and (and (ne (pascal .Name) "ArchivedOn") (ne (pascal .Name) "ID")) (and (ne (pascal .Name) "CreatedOn") (ne (pascal .Name) "ProductRootID")) }}
            {{ pascal .Name }} {{ .Type }} `json:"{{ snake .Name }}"` // {{ .DBName }}
        {{- end }}
    {{- end -}}
    {{- "\n" -}}
	Options []ProductOptionCreationInput `json:"options"`
}
{{ end }}

{{ if eq $modelName "ProductOption" }}
// ProductOptionCreationInput is a struct to use for creating product options
type ProductOptionCreationInput struct {
	Name   string   `json:"name"`
	Values []string `json:"values"`
}
{{ end }}