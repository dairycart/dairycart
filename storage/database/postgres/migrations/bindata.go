// Code generated by go-bindata.
// sources:
// 1495495688_products.down.sql
// 1495495688_products.up.sql
// 1496132528_discounts.down.sql
// 1496132528_discounts.up.sql
// 1498638543_auth.down.sql
// 1498638543_auth.up.sql
// 1512371453_webhooks.down.sql
// 1512371453_webhooks.up.sql
// 9999999999_example_data.down.sql
// 9999999999_example_data.up.sql
// bindata.go
// DO NOT EDIT!

package migrations

import (
	"fmt"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)
type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var __1495495688_productsDownSql = []byte(`DROP TABLE product_image_bridge;
DROP TABLE product_variant_bridge;
DROP TABLE product_option_values;
DROP TABLE product_options;
DROP TABLE products;
DROP TABLE product_images CASCADE;
DROP TABLE product_roots CASCADE;`)

func _1495495688_productsDownSqlBytes() ([]byte, error) {
	return __1495495688_productsDownSql, nil
}

func _1495495688_productsDownSql() (*asset, error) {
	bytes, err := _1495495688_productsDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "1495495688_products.down.sql", size: 219, mode: os.FileMode(420), modTime: time.Unix(1520775515, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __1495495688_productsUpSql = []byte(`CREATE TABLE IF NOT EXISTS product_roots (
    "id" bigserial,
    "name" text NOT NULL,
    "primary_image_id" bigint,
    "subtitle" text NOT NULL DEFAULT '',
    "description" text NOT NULL DEFAULT '',
    "sku_prefix" text NOT NULL,
    "manufacturer" text NOT NULL DEFAULT '',
    "brand" text NOT NULL DEFAULT '',
    "taxable" boolean NOT NULL DEFAULT 'false',
    "cost" numeric(15, 2) NOT NULL DEFAULT 0,
    "product_weight" numeric(15, 2) NOT NULL DEFAULT 0,
    "product_height" numeric(15, 2) NOT NULL DEFAULT 0,
    "product_width" numeric(15, 2) NOT NULL DEFAULT 0,
    "product_length" numeric(15, 2) NOT NULL DEFAULT 0,
    "package_weight" numeric(15, 2) NOT NULL DEFAULT 0,
    "package_height" numeric(15, 2) NOT NULL DEFAULT 0,
    "package_width" numeric(15, 2) NOT NULL DEFAULT 0,
    "package_length" numeric(15, 2) NOT NULL DEFAULT 0,
    "quantity_per_package" integer NOT NULL DEFAULT 1,
    "available_on" timestamp NOT NULL DEFAULT NOW(),
    "created_on" timestamp NOT NULL DEFAULT NOW(),
    "updated_on" timestamp,
    "archived_on" timestamp,
    UNIQUE ("sku_prefix", "archived_on"),
    PRIMARY KEY ("id")
);

CREATE TABLE IF NOT EXISTS products (
    "id" bigserial,
    "product_root_id" bigint NOT NULL,
    "primary_image_id" bigint,
    "name" text NOT NULL,
    "subtitle" text NOT NULL DEFAULT '',
    "description" text NOT NULL DEFAULT '',
    "option_summary" text NOT NULL DEFAULT '',
    "sku" text NOT NULL,
    "upc" text NOT NULL DEFAULT '',
    "manufacturer" text NOT NULL DEFAULT '',
    "brand" text NOT NULL DEFAULT '',
    "quantity" integer NOT NULL DEFAULT 0,
    "taxable" boolean NOT NULL DEFAULT 'false',
    "price" numeric(15, 2) NOT NULL,
    "on_sale" boolean NOT NULL DEFAULT 'false',
    "sale_price" numeric(15, 2) NOT NULL DEFAULT 0 CONSTRAINT sale_price_must_not_be_zero CHECK(
        (sale_price != 0 AND on_sale IS TRUE)
                         OR
        (sale_price  = 0 AND on_sale IS FALSE)
    ),
    "cost" numeric(15, 2) NOT NULL DEFAULT 0,
    "product_weight" numeric(15, 2) NOT NULL DEFAULT 0,
    "product_height" numeric(15, 2) NOT NULL DEFAULT 0,
    "product_width" numeric(15, 2) NOT NULL DEFAULT 0,
    "product_length" numeric(15, 2) NOT NULL DEFAULT 0,
    "package_weight" numeric(15, 2) NOT NULL DEFAULT 0,
    "package_height" numeric(15, 2) NOT NULL DEFAULT 0,
    "package_width" numeric(15, 2) NOT NULL DEFAULT 0,
    "package_length" numeric(15, 2) NOT NULL DEFAULT 0,
    "quantity_per_package" integer NOT NULL DEFAULT 1,
    "available_on" timestamp NOT NULL DEFAULT NOW(),
    "created_on" timestamp NOT NULL DEFAULT NOW(),
    "updated_on" timestamp,
    "archived_on" timestamp,
    UNIQUE ("sku", "archived_on"),
    PRIMARY KEY ("id"),
    FOREIGN KEY ("product_root_id") REFERENCES "product_roots"("id")
);
CREATE UNIQUE INDEX products_upc_empty_but_not_null_idx ON products (upc) WHERE upc != '';

CREATE TABLE IF NOT EXISTS product_images (
    "id" bigserial,
    "product_root_id" bigint NOT NULL,
    "thumbnail_url" text NOT NULL,
    "main_url" text NOT NULL,
    "original_url" text NOT NULL,
    "source_url" text NOT NULL DEFAULT '',
    "created_on" timestamp NOT NULL DEFAULT NOW(),
    "updated_on" timestamp,
    "archived_on" timestamp,
    PRIMARY KEY ("id"),
    FOREIGN KEY ("product_root_id") REFERENCES "product_roots"("id")
);

ALTER TABLE IF EXISTS "product_roots"
    ADD FOREIGN KEY ("primary_image_id") REFERENCES "product_images"("id");

ALTER TABLE IF EXISTS "products"
    ADD FOREIGN KEY ("primary_image_id") REFERENCES "product_images"("id");

CREATE TABLE IF NOT EXISTS product_image_bridge (
    "id" bigserial,
    "product_id" bigint NOT NULL,
    "product_image_id" bigint NOT NULL,
    UNIQUE ("product_id", "product_image_id"),
    PRIMARY KEY ("id"),
    FOREIGN KEY ("product_id") REFERENCES "products"("id"),
    FOREIGN KEY ("product_image_id") REFERENCES "product_images"("id")
);

CREATE TABLE IF NOT EXISTS product_options (
    "id" bigserial,
    "name" text NOT NULL,
    "product_root_id" bigint NOT NULL,
    "created_on" timestamp NOT NULL DEFAULT NOW(),
    "updated_on" timestamp,
    "archived_on" timestamp,
    UNIQUE ("product_root_id", "name"),
    UNIQUE ("name", "archived_on"),
    PRIMARY KEY ("id"),
    FOREIGN KEY ("product_root_id") REFERENCES "product_roots"("id")
);

CREATE TABLE IF NOT EXISTS product_option_values (
    "id" bigserial,
    "product_option_id" bigint NOT NULL,
    "value" text NOT NULL,
    "created_on" timestamp NOT NULL DEFAULT NOW(),
    "updated_on" timestamp,
    "archived_on" timestamp,
    UNIQUE ("product_option_id", "value"),
    UNIQUE ("value", "archived_on"),
    PRIMARY KEY ("id"),
    FOREIGN KEY ("product_option_id") REFERENCES "product_options"("id")
);

CREATE TABLE IF NOT EXISTS product_variant_bridge (
    "id" bigserial,
    "product_id" bigint NOT NULL,
    "product_option_value_id" bigint NOT NULL,
    "created_on" timestamp NOT NULL DEFAULT NOW(),
    "archived_on" timestamp,
    FOREIGN KEY ("product_id") REFERENCES "products"("id"),
    FOREIGN KEY ("product_option_value_id") REFERENCES "product_option_values"("id")
);`)

func _1495495688_productsUpSqlBytes() ([]byte, error) {
	return __1495495688_productsUpSql, nil
}

func _1495495688_productsUpSql() (*asset, error) {
	bytes, err := _1495495688_productsUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "1495495688_products.up.sql", size: 5151, mode: os.FileMode(420), modTime: time.Unix(1520775515, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __1496132528_discountsDownSql = []byte(`DROP TABLE discounts;
DROP TYPE discount_type CASCADE;`)

func _1496132528_discountsDownSqlBytes() ([]byte, error) {
	return __1496132528_discountsDownSql, nil
}

func _1496132528_discountsDownSql() (*asset, error) {
	bytes, err := _1496132528_discountsDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "1496132528_discounts.down.sql", size: 54, mode: os.FileMode(420), modTime: time.Unix(1520775515, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __1496132528_discountsUpSql = []byte(`CREATE TYPE discount_type AS ENUM ('percentage', 'flat_amount');
CREATE TABLE IF NOT EXISTS discounts (
    "id" bigserial,
    "name" text NOT NULL,
    "discount_type" discount_type NOT NULL DEFAULT 'percentage',
    "amount" numeric(15, 2) NOT NULL DEFAULT 0,
    "expires_on" timestamp,
    "requires_code" boolean NOT NULL DEFAULT FALSE,
    "code" text NOT NULL DEFAULT '' CONSTRAINT code_must_be_provided CHECK(
        (code != '' AND requires_code IS TRUE)
                        OR
        (code = '' AND requires_code IS FALSE)
    ),
    "limited_use" boolean NOT NULL DEFAULT FALSE,
    "number_of_uses" bigint NOT NULL DEFAULT 0 CONSTRAINT use_number_must_be_provided CHECK(
        (number_of_uses != 0 AND limited_use IS TRUE)
                            OR
        (number_of_uses = 0 AND limited_use IS FALSE)
    ),
    "login_required" boolean NOT NULL DEFAULT FALSE,
    "starts_on" timestamp NOT NULL DEFAULT NOW(),
    "created_on" timestamp NOT NULL DEFAULT NOW(),
    "updated_on" timestamp,
    "archived_on" timestamp,
    PRIMARY KEY ("id")
);`)

func _1496132528_discountsUpSqlBytes() ([]byte, error) {
	return __1496132528_discountsUpSql, nil
}

func _1496132528_discountsUpSql() (*asset, error) {
	bytes, err := _1496132528_discountsUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "1496132528_discounts.up.sql", size: 1072, mode: os.FileMode(420), modTime: time.Unix(1520775515, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __1498638543_authDownSql = []byte(`DROP TABLE password_reset_tokens;
DROP TABLE login_attempts;
DROP TABLE users;`)

func _1498638543_authDownSqlBytes() ([]byte, error) {
	return __1498638543_authDownSql, nil
}

func _1498638543_authDownSql() (*asset, error) {
	bytes, err := _1498638543_authDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "1498638543_auth.down.sql", size: 78, mode: os.FileMode(420), modTime: time.Unix(1520775515, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __1498638543_authUpSql = []byte(`CREATE TABLE IF NOT EXISTS users (
    "id" bigserial,
    "first_name" text NOT NULL,
    "last_name" text NOT NULL,
    "username" text NOT NULL,
    "email" text NOT NULL,
    "password" text NOT NULL,
    "is_admin" bool NOT NULL DEFAULT 'false',
    "password_last_changed_on" timestamp,
    "created_on" timestamp NOT NULL DEFAULT NOW(),
    "updated_on" timestamp,
    "archived_on" timestamp,
    UNIQUE ("username", "archived_on"),
    PRIMARY KEY ("id")
);

CREATE TABLE IF NOT EXISTS password_reset_tokens (
    "id" bigserial,
    "user_id" bigint NOT NULL,
    "token" text NOT NULL,
    "created_on" timestamp NOT NULL DEFAULT NOW(),
    "expires_on" timestamp NOT NULL DEFAULT NOW() + (15 * interval '1 minute'),
    "password_reset_on" timestamp,
    UNIQUE ("token"),
    PRIMARY KEY ("id"),
    FOREIGN KEY ("user_id") REFERENCES "users"("id")
);

CREATE TABLE IF NOT EXISTS login_attempts (
    "id" bigserial,
    "username" text NOT NULL,
    "successful" boolean NOT NULL DEFAULT 'false',
    "created_on" timestamp NOT NULL DEFAULT NOW()
)`)

func _1498638543_authUpSqlBytes() ([]byte, error) {
	return __1498638543_authUpSql, nil
}

func _1498638543_authUpSql() (*asset, error) {
	bytes, err := _1498638543_authUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "1498638543_auth.up.sql", size: 1062, mode: os.FileMode(420), modTime: time.Unix(1521205186, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __1512371453_webhooksDownSql = []byte(`DROP TABLE webhook_execution_logs;
DROP TABLE webhooks;
DROP TYPE webhook_event CASCADE;
DROP TYPE content_type CASCADE;`)

func _1512371453_webhooksDownSqlBytes() ([]byte, error) {
	return __1512371453_webhooksDownSql, nil
}

func _1512371453_webhooksDownSql() (*asset, error) {
	bytes, err := _1512371453_webhooksDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "1512371453_webhooks.down.sql", size: 120, mode: os.FileMode(420), modTime: time.Unix(1520775515, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __1512371453_webhooksUpSql = []byte(`CREATE TYPE webhook_event AS ENUM ('product_created', 'product_updated', 'product_archived');
CREATE TYPE content_type AS ENUM ('application/json', 'application/xml');

CREATE TABLE IF NOT EXISTS webhooks (
    "id" bigserial,
    "url" text NOT NULL,
    "event_type" webhook_event NOT NULL,
    "content_type" content_type NOT NULL DEFAULT 'application/json',
    "created_on" timestamp NOT NULL DEFAULT NOW(),
    "updated_on" timestamp,
    "archived_on" timestamp,
    PRIMARY KEY ("id")
);

CREATE TABLE IF NOT EXISTS webhook_execution_logs (
    "id" bigserial,
    "webhook_id" bigint NOT NULL,
    "status_code" int NOT NULL,
    "succeeded" boolean NOT NULL DEFAULT 'false',
    "executed_on" timestamp NOT NULL DEFAULT NOW(),
    PRIMARY KEY ("id"),
    FOREIGN KEY ("webhook_id") REFERENCES "webhooks"("id")
);`)

func _1512371453_webhooksUpSqlBytes() ([]byte, error) {
	return __1512371453_webhooksUpSql, nil
}

func _1512371453_webhooksUpSql() (*asset, error) {
	bytes, err := _1512371453_webhooksUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "1512371453_webhooks.up.sql", size: 822, mode: os.FileMode(420), modTime: time.Unix(1520775515, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __9999999999_example_dataDownSql = []byte(`DELETE FROM webhooks WHERE id IS NOT NULL;
DELETE FROM discounts WHERE id IS NOT NULL;
DELETE FROM product_variant_bridge WHERE id IS NOT NULL;
DELETE FROM product_option_values WHERE id IS NOT NULL;
DELETE FROM product_options WHERE id IS NOT NULL;
DELETE FROM products WHERE id IS NOT NULL;`)

func _9999999999_example_dataDownSqlBytes() ([]byte, error) {
	return __9999999999_example_dataDownSql, nil
}

func _9999999999_example_dataDownSql() (*asset, error) {
	bytes, err := _9999999999_example_dataDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "9999999999_example_data.down.sql", size: 292, mode: os.FileMode(420), modTime: time.Unix(1520775515, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __9999999999_example_dataUpSql = []byte(`INSERT INTO product_roots
(
    "name",
    "subtitle",
    "description",
    "sku_prefix",
    "manufacturer",
    "brand",
    "taxable",
    "cost",
    "product_weight",
    "product_height",
    "product_width",
    "product_length",
    "package_weight",
    "package_height",
    "package_width",
    "package_length",
    "quantity_per_package",
    "available_on"
)
VALUES
(
    /* name                 */ 'Your Favorite Band''s T-Shirt',
    /* subtitle             */ 'A t-shirt you can wear',
    /* description          */ 'Wear this if you''d like. Or don''t, I''m not in charge of your actions',
    /* sku_prefix           */ 't-shirt',
    /* manufacturer         */ 'Record Company',
    /* brand                */ 'Your Favorite Band',
    /* taxable              */ 'true',
    /* cost                 */ 20.00,
    /* product_weight       */ 1,
    /* product_height       */ 5,
    /* product_width        */ 5,
    /* product_length       */ 5,
    /* package_weight       */ 1,
    /* package_height       */ 5,
    /* package_width        */ 5,
    /* package_length       */ 5,
    /* quantity_per_package */ 1,
    /* available_on         */ NOW()
),
(
    /* name                 */ 'Sleeping People - Sleeping People',
    /* subtitle             */ 'A solid math rock album',
    /* description          */ 'Arbitrary description can go here because real product descriptions are technically copywritten.',
    /* sku_prefix           */ 'sleeping-people',
    /* manufacturer         */ 'Record Company',
    /* brand                */ 'Sleeping People',
    /* taxable              */ 'true',
    /* cost                 */ 5,
    /* product_weight       */ 1,
    /* product_height       */ 12,
    /* product_width        */ 12,
    /* product_length       */ .5,
    /* package_weight       */ 1,
    /* package_height       */ 12,
    /* package_width        */ 12,
    /* package_length       */ .5,
    /* quantity_per_package */ 1,
    /* available_on         */ NOW()
),
(
    /* name                 */ 'Jaga Jazzist - One Armed Bandit',
    /* subtitle             */ 'A solid jazz album',
    /* description          */ 'Arbitrary description can go here because real product descriptions are technically copywritten.',
    /* sku_prefix           */ 'one-armed-bandit',
    /* manufacturer         */ 'Record Company',
    /* brand                */ 'Jaga Jazzist',
    /* taxable              */ 'true',
    /* cost                 */ 5,
    /* product_weight       */ 1,
    /* product_height       */ 12,
    /* product_width        */ 12,
    /* product_length       */ .5,
    /* package_weight       */ 1,
    /* package_height       */ 12,
    /* package_width        */ 12,
    /* package_length       */ .5,
    /* quantity_per_package */ 1,
    /* available_on         */ NOW()
),
(
    /* name                 */ 'Cloudkicker - Let Yourself Be Huge',
    /* subtitle             */ 'A solid instrumental album',
    /* description          */ 'Arbitrary description can go here because real product descriptions are technically copywritten.',
    /* sku_prefix           */ 'let-yourself-be-huge',
    /* manufacturer         */ 'Record Company',
    /* brand                */ 'Cloudkicker',
    /* taxable              */ 'true',
    /* cost                 */ 5,
    /* product_weight       */ 1,
    /* product_height       */ 12,
    /* product_width        */ 12,
    /* product_length       */ .5,
    /* package_weight       */ 1,
    /* package_height       */ 12,
    /* package_width        */ 12,
    /* package_length       */ .5,
    /* quantity_per_package */ 1,
    /* available_on         */ NOW()
),
(
    /* name                 */ 'Animals As Leaders - The Joy Of Motion',
    /* subtitle             */ 'A solid prog metal album',
    /* description          */ 'Arbitrary description can go here because real product descriptions are technically copywritten.',
    /* sku_prefix           */ 'the-joy-of-motion',
    /* manufacturer         */ 'Record Company',
    /* brand                */ 'Animals As Leaders',
    /* taxable              */ 'true',
    /* cost                 */ 5,
    /* product_weight       */ 1,
    /* product_height       */ 12,
    /* product_width        */ 12,
    /* product_length       */ .5,
    /* package_weight       */ 1,
    /* package_height       */ 12,
    /* package_width        */ 12,
    /* package_length       */ .5,
    /* quantity_per_package */ 1,
    /* available_on         */ NOW()
),
(
    /* name                 */ 'Mort Garson - Mother Earth''s Plantasia',
    /* subtitle             */ 'A solid synth album',
    /* description          */ 'Arbitrary description can go here because real product descriptions are technically copywritten.',
    /* sku_prefix           */ 'mother-earths-plantasia',
    /* manufacturer         */ 'Record Company',
    /* brand                */ 'Mort Garson',
    /* taxable              */ 'true',
    /* cost                 */ 5,
    /* product_weight       */ 1,
    /* product_height       */ 12,
    /* product_width        */ 12,
    /* product_length       */ .5,
    /* package_weight       */ 1,
    /* package_height       */ 12,
    /* package_width        */ 12,
    /* package_length       */ .5,
    /* quantity_per_package */ 1,
    /* available_on         */ NOW()
),
(
    /* name                 */ 'Camel - The Snow Goose',
    /* subtitle             */ 'A solid prog rock album',
    /* description          */ 'Arbitrary description can go here because real product descriptions are technically copywritten.',
    /* sku_prefix           */ 'the-snow-goose',
    /* manufacturer         */ 'Record Company',
    /* brand                */ 'Camel',
    /* taxable              */ 'true',
    /* cost                 */ 5,
    /* product_weight       */ 1,
    /* product_height       */ 12,
    /* product_width        */ 12,
    /* product_length       */ .5,
    /* package_weight       */ 1,
    /* package_height       */ 12,
    /* package_width        */ 12,
    /* package_length       */ .5,
    /* quantity_per_package */ 1,
    /* available_on         */ NOW()
),
(
    /* name                 */ 'Piglet - Lava Land',
    /* subtitle             */ 'Another solid math rock album',
    /* description          */ 'Arbitrary description can go here because real product descriptions are technically copywritten.',
    /* sku_prefix           */ 'lava-land',
    /* manufacturer         */ 'Record Company',
    /* brand                */ 'Piglet',
    /* taxable              */ 'true',
    /* cost                 */ 5,
    /* product_weight       */ 1,
    /* product_height       */ 12,
    /* product_width        */ 12,
    /* product_length       */ .5,
    /* package_weight       */ 1,
    /* package_height       */ 12,
    /* package_width        */ 12,
    /* package_length       */ .5,
    /* quantity_per_package */ 1,
    /* available_on         */ NOW()
),
(
    /* name                 */ 'Tera Melos - Untitled',
    /* subtitle             */ 'Yet another solid math rock album',
    /* description          */ 'Arbitrary description can go here because real product descriptions are technically copywritten.',
    /* sku_prefix           */ 'untitled',
    /* manufacturer         */ 'Record Company',
    /* brand                */ 'Tera Melos',
    /* taxable              */ 'true',
    /* cost                 */ 5,
    /* product_weight       */ 1,
    /* product_height       */ 12,
    /* product_width        */ 12,
    /* product_length       */ .5,
    /* package_weight       */ 1,
    /* package_height       */ 12,
    /* package_width        */ 12,
    /* package_length       */ .5,
    /* quantity_per_package */ 1,
    /* available_on         */ NOW()
),
(
    /* name                 */ 'Frank Zappa - Jazz From Hell',
    /* subtitle             */ 'A solid Zappa album',
    /* description          */ 'Arbitrary description can go here because real product descriptions are technically copywritten.',
    /* sku_prefix           */ 'jazz-from-hell',
    /* manufacturer         */ 'Record Company',
    /* brand                */ 'Frank Zappa',
    /* taxable              */ 'true',
    /* cost                 */ 5,
    /* product_weight       */ 1,
    /* product_height       */ 12,
    /* product_width        */ 12,
    /* product_length       */ .5,
    /* package_weight       */ 1,
    /* package_height       */ 12,
    /* package_width        */ 12,
    /* package_length       */ .5,
    /* quantity_per_package */ 1,
    /* available_on         */ NOW()
),
(
    /* name                 */ 'CHON - Newborn Sun',
    /* subtitle             */ 'Yet another solid math rock album',
    /* description          */ 'Arbitrary description can go here because real product descriptions are technically copywritten.',
    /* sku_prefix           */ 'newborn-sun',
    /* manufacturer         */ 'Record Company',
    /* brand                */ 'CHON',
    /* taxable              */ 'true',
    /* cost                 */ 5,
    /* product_weight       */ 1,
    /* product_height       */ 12,
    /* product_width        */ 12,
    /* product_length       */ .5,
    /* package_weight       */ 1,
    /* package_height       */ 12,
    /* package_width        */ 12,
    /* package_length       */ .5,
    /* quantity_per_package */ 1,
    /* available_on         */ NOW()
);

INSERT INTO products
(
    "product_root_id",
    "name",
    "subtitle",
    "description",
    "option_summary",
    "sku",
    "upc",
    "manufacturer",
    "brand",
    "quantity",
    "taxable",
    "price",
    "on_sale",
    "sale_price",
    "cost",
    "product_weight",
    "product_height",
    "product_width",
    "product_length",
    "package_weight",
    "package_height",
    "package_width",
    "package_length",
    "quantity_per_package"
)
VALUES
(
    /* product_root_id      */ 1,
    /* name                 */ 'Your Favorite Band''s T-Shirt',
    /* subtitle             */ 'A t-shirt you can wear',
    /* description          */ 'Wear this if you''d like. Or don''t, I''m not in charge of your actions',
    /* option_summary       */ 'Size: Small, Color: Red',
    /* sku                  */ 't-shirt-small-red',
    /* upc                  */ '',
    /* manufacturer         */ 'Record Company',
    /* brand                */ 'Your Favorite Band',
    /* quantity             */ 666,
    /* taxable              */ 'true',
    /* price                */ 20.00,
    /* on_sale              */ 'false',
    /* sale_price           */ 0.00,
    /* cost                 */ 10,
    /* product_weight       */ 1,
    /* product_height       */ 5,
    /* product_width        */ 5,
    /* product_length       */ 5,
    /* package_weight       */ 1,
    /* package_height       */ 5,
    /* package_width        */ 5,
    /* package_length       */ 5,
    /* quantity_per_package */ 1
),
(
    /* product_root_id      */ 1,
    /* name                 */ 'Your Favorite Band''s T-Shirt',
    /* subtitle             */ 'A t-shirt you can wear',
    /* description          */ 'Wear this if you''d like. Or don''t, I''m not in charge of your actions',
    /* option_summary       */ 'Size: Medium, Color: Red',
    /* sku                  */ 't-shirt-medium-red',
    /* upc                  */ '',
    /* manufacturer         */ 'Record Company',
    /* brand                */ 'Your Favorite Band',
    /* quantity             */ 666,
    /* taxable              */ 'true',
    /* price                */ 20.00,
    /* on_sale              */ 'false',
    /* sale_price           */ 0.00,
    /* cost                 */ 10,
    /* product_weight       */ 1,
    /* product_height       */ 5,
    /* product_width        */ 5,
    /* product_length       */ 5,
    /* package_weight       */ 1,
    /* package_height       */ 5,
    /* package_width        */ 5,
    /* package_length       */ 5,
    /* quantity_per_package */ 1
),
(
    /* product_root_id      */ 1,
    /* name                 */ 'Your Favorite Band''s T-Shirt',
    /* subtitle             */ 'A t-shirt you can wear',
    /* description          */ 'Wear this if you''d like. Or don''t, I''m not in charge of your actions',
    /* option_summary       */ 'Size: Large, Color: Red',
    /* sku                  */ 't-shirt-large-red',
    /* upc                  */ '',
    /* manufacturer         */ 'Record Company',
    /* brand                */ 'Your Favorite Band',
    /* quantity             */ 666,
    /* taxable              */ 'true',
    /* price                */ 20.00,
    /* on_sale              */ 'false',
    /* sale_price           */ 0.00,
    /* cost                 */ 10,
    /* product_weight       */ 1,
    /* product_height       */ 5,
    /* product_width        */ 5,
    /* product_length       */ 5,
    /* package_weight       */ 1,
    /* package_height       */ 5,
    /* package_width        */ 5,
    /* package_length       */ 5,
    /* quantity_per_package */ 1
),
(
    /* product_root_id      */ 1,
    /* name                 */ 'Your Favorite Band''s T-Shirt',
    /* subtitle             */ 'A t-shirt you can wear',
    /* description          */ 'Wear this if you''d like. Or don''t, I''m not in charge of your actions',
    /* option_summary       */ 'Size: Small, Color: Blue',
    /* sku                  */ 't-shirt-small-blue',
    /* upc                  */ '',
    /* manufacturer         */ 'Record Company',
    /* brand                */ 'Your Favorite Band',
    /* quantity             */ 666,
    /* taxable              */ 'true',
    /* price                */ 20.00,
    /* on_sale              */ 'false',
    /* sale_price           */ 0.00,
    /* cost                 */ 10,
    /* product_weight       */ 1,
    /* product_height       */ 5,
    /* product_width        */ 5,
    /* product_length       */ 5,
    /* package_weight       */ 1,
    /* package_height       */ 5,
    /* package_width        */ 5,
    /* package_length       */ 5,
    /* quantity_per_package */ 1
),
(
    /* product_root_id      */ 1,
    /* name                 */ 'Your Favorite Band''s T-Shirt',
    /* subtitle             */ 'A t-shirt you can wear',
    /* description          */ 'Wear this if you''d like. Or don''t, I''m not in charge of your actions',
    /* option_summary       */ 'Size: Medium, Color: Blue',
    /* sku                  */ 't-shirt-medium-blue',
    /* upc                  */ '',
    /* manufacturer         */ 'Record Company',
    /* brand                */ 'Your Favorite Band',
    /* quantity             */ 666,
    /* taxable              */ 'true',
    /* price                */ 20.00,
    /* on_sale              */ 'false',
    /* sale_price           */ 0.00,
    /* cost                 */ 10,
    /* product_weight       */ 1,
    /* product_height       */ 5,
    /* product_width        */ 5,
    /* product_length       */ 5,
    /* package_weight       */ 1,
    /* package_height       */ 5,
    /* package_width        */ 5,
    /* package_length       */ 5,
    /* quantity_per_package */ 1
),
(
    /* product_root_id      */ 1,
    /* name                 */ 'Your Favorite Band''s T-Shirt',
    /* subtitle             */ 'A t-shirt you can wear',
    /* description          */ 'Wear this if you''d like. Or don''t, I''m not in charge of your actions',
    /* option_summary       */ 'Size: Large, Color: Blue',
    /* sku                  */ 't-shirt-large-blue',
    /* upc                  */ '',
    /* manufacturer         */ 'Record Company',
    /* brand                */ 'Your Favorite Band',
    /* quantity             */ 666,
    /* taxable              */ 'true',
    /* price                */ 20.00,
    /* on_sale              */ 'false',
    /* sale_price           */ 0.00,
    /* cost                 */ 10,
    /* product_weight       */ 1,
    /* product_height       */ 5,
    /* product_width        */ 5,
    /* product_length       */ 5,
    /* package_weight       */ 1,
    /* package_height       */ 5,
    /* package_width        */ 5,
    /* package_length       */ 5,
    /* quantity_per_package */ 1
),
(
    /* product_root_id      */ 1,
    /* name                 */ 'Your Favorite Band''s T-Shirt',
    /* subtitle             */ 'A t-shirt you can wear',
    /* description          */ 'Wear this if you''d like. Or don''t, I''m not in charge of your actions',
    /* option_summary       */ 'Size: Small, Color: Green',
    /* sku                  */ 't-shirt-small-green',
    /* upc                  */ '',
    /* manufacturer         */ 'Record Company',
    /* brand                */ 'Your Favorite Band',
    /* quantity             */ 666,
    /* taxable              */ 'true',
    /* price                */ 20.00,
    /* on_sale              */ 'false',
    /* sale_price           */ 0.00,
    /* cost                 */ 10,
    /* product_weight       */ 1,
    /* product_height       */ 5,
    /* product_width        */ 5,
    /* product_length       */ 5,
    /* package_weight       */ 1,
    /* package_height       */ 5,
    /* package_width        */ 5,
    /* package_length       */ 5,
    /* quantity_per_package */ 1
),
(
    /* product_root_id      */ 1,
    /* name                 */ 'Your Favorite Band''s T-Shirt',
    /* subtitle             */ 'A t-shirt you can wear',
    /* description          */ 'Wear this if you''d like. Or don''t, I''m not in charge of your actions',
    /* option_summary       */ 'Size: Medium, Color: Green',
    /* sku                  */ 't-shirt-medium-green',
    /* upc                  */ '',
    /* manufacturer         */ 'Record Company',
    /* brand                */ 'Your Favorite Band',
    /* quantity             */ 666,
    /* taxable              */ 'true',
    /* price                */ 20.00,
    /* on_sale              */ 'false',
    /* sale_price           */ 0.00,
    /* cost                 */ 10,
    /* product_weight       */ 1,
    /* product_height       */ 5,
    /* product_width        */ 5,
    /* product_length       */ 5,
    /* package_weight       */ 1,
    /* package_height       */ 5,
    /* package_width        */ 5,
    /* package_length       */ 5,
    /* quantity_per_package */ 1
),
(
    /* product_root_id      */ 1,
    /* name                 */ 'Your Favorite Band''s T-Shirt',
    /* subtitle             */ 'A t-shirt you can wear',
    /* description          */ 'Wear this if you''d like. Or don''t, I''m not in charge of your actions',
    /* option_summary       */ 'Size: Large, Color: Green',
    /* sku                  */ 't-shirt-large-green',
    /* upc                  */ '',
    /* manufacturer         */ 'Record Company',
    /* brand                */ 'Your Favorite Band',
    /* quantity             */ 666,
    /* taxable              */ 'true',
    /* price                */ 20.00,
    /* on_sale              */ 'false',
    /* sale_price           */ 0.00,
    /* cost                 */ 10,
    /* product_weight       */ 1,
    /* product_height       */ 5,
    /* product_width        */ 5,
    /* product_length       */ 5,
    /* package_weight       */ 1,
    /* package_height       */ 5,
    /* package_width        */ 5,
    /* package_length       */ 5,
    /* quantity_per_package */ 1
),(
    /* product_root_id      */ 2,
    /* name                 */ 'Sleeping People - Sleeping People',
    /* subtitle             */ 'A solid math rock album',
    /* description          */ 'Arbitrary description can go here because real product descriptions are technically copywritten.',
    /* option_summary       */ '',
    /* sku                  */ 'sleeping-people',
    /* upc                  */ '656605908410',
    /* manufacturer         */ 'Record Company',
    /* brand                */ 'Sleeping People',
    /* quantity             */ 123,
    /* taxable              */ 'true',
    /* price                */ 12.34,
    /* on_sale              */ 'false',
    /* sale_price           */ 0.00,
    /* cost                 */ 5,
    /* product_weight       */ 1,
    /* product_height       */ 12,
    /* product_width        */ 12,
    /* product_length       */ .5,
    /* package_weight       */ 1,
    /* package_height       */ 12,
    /* package_width        */ 12,
    /* package_length       */ .5,
    /* quantity_per_package */ 1
),
(
    /* product_root_id      */ 3,
    /* name                 */ 'Jaga Jazzist - One Armed Bandit',
    /* subtitle             */ 'A solid jazz album',
    /* description          */ 'Arbitrary description can go here because real product descriptions are technically copywritten.',
    /* option_summary       */ '',
    /* sku                  */ 'one-armed-bandit',
    /* upc                  */ '5021392578187',
    /* manufacturer         */ 'Record Company',
    /* brand                */ 'Jaga Jazzist',
    /* quantity             */ 123,
    /* taxable              */ 'true',
    /* price                */ 12.34,
    /* on_sale              */ 'false',
    /* sale_price           */ 0.00,
    /* cost                 */ 5,
    /* product_weight       */ 1,
    /* product_height       */ 12,
    /* product_width        */ 12,
    /* product_length       */ .5,
    /* package_weight       */ 1,
    /* package_height       */ 12,
    /* package_width        */ 12,
    /* package_length       */ .5,
    /* quantity_per_package */ 1
),
(
    /* product_root_id      */ 4,
    /* name                 */ 'Cloudkicker - Let Yourself Be Huge',
    /* subtitle             */ 'A solid instrumental album',
    /* description          */ 'Arbitrary description can go here because real product descriptions are technically copywritten.',
    /* option_summary       */ '',
    /* sku                  */ 'let-yourself-be-huge',
    /* upc                  */ '',
    /* manufacturer         */ 'Record Company',
    /* brand                */ 'Cloudkicker',
    /* quantity             */ 123,
    /* taxable              */ 'true',
    /* price                */ 12.34,
    /* on_sale              */ 'false',
    /* sale_price           */ 0.00,
    /* cost                 */ 5,
    /* product_weight       */ 1,
    /* product_height       */ 12,
    /* product_width        */ 12,
    /* product_length       */ .5,
    /* package_weight       */ 1,
    /* package_height       */ 12,
    /* package_width        */ 12,
    /* package_length       */ .5,
    /* quantity_per_package */ 1
),
(
    /* product_root_id      */ 5,
    /* name                 */ 'Animals As Leaders - The Joy Of Motion',
    /* subtitle             */ 'A solid prog metal album',
    /* description          */ 'Arbitrary description can go here because real product descriptions are technically copywritten.',
    /* option_summary       */ '',
    /* sku                  */ 'the-joy-of-motion',
    /* upc                  */ '817424013895',
    /* manufacturer         */ 'Record Company',
    /* brand                */ 'Animals As Leaders',
    /* quantity             */ 123,
    /* taxable              */ 'true',
    /* price                */ 12.34,
    /* on_sale              */ 'false',
    /* sale_price           */ 0.00,
    /* cost                 */ 5,
    /* product_weight       */ 1,
    /* product_height       */ 12,
    /* product_width        */ 12,
    /* product_length       */ .5,
    /* package_weight       */ 1,
    /* package_height       */ 12,
    /* package_width        */ 12,
    /* package_length       */ .5,
    /* quantity_per_package */ 1
),
(
    /* product_root_id      */ 6,
    /* name                 */ 'Mort Garson - Mother Earth''s Plantasia',
    /* subtitle             */ 'A solid synth album',
    /* description          */ 'Arbitrary description can go here because real product descriptions are technically copywritten.',
    /* option_summary       */ '',
    /* sku                  */ 'mother-earths-plantasia',
    /* upc                  */ '5291103812552',
    /* manufacturer         */ 'Record Company',
    /* brand                */ 'Mort Garson',
    /* quantity             */ 123,
    /* taxable              */ 'true',
    /* price                */ 12.34,
    /* on_sale              */ 'false',
    /* sale_price           */ 0.00,
    /* cost                 */ 5,
    /* product_weight       */ 1,
    /* product_height       */ 12,
    /* product_width        */ 12,
    /* product_length       */ .5,
    /* package_weight       */ 1,
    /* package_height       */ 12,
    /* package_width        */ 12,
    /* package_length       */ .5,
    /* quantity_per_package */ 1
),
(
    /* product_root_id      */ 7,
    /* name                 */ 'Camel - The Snow Goose',
    /* subtitle             */ 'A solid prog rock album',
    /* description          */ 'Arbitrary description can go here because real product descriptions are technically copywritten.',
    /* option_summary       */ '',
    /* sku                  */ 'the-snow-goose',
    /* upc                  */ '600753356661',
    /* manufacturer         */ 'Record Company',
    /* brand                */ 'Camel',
    /* quantity             */ 123,
    /* taxable              */ 'true',
    /* price                */ 12.34,
    /* on_sale              */ 'false',
    /* sale_price           */ 0.00,
    /* cost                 */ 5,
    /* product_weight       */ 1,
    /* product_height       */ 12,
    /* product_width        */ 12,
    /* product_length       */ .5,
    /* package_weight       */ 1,
    /* package_height       */ 12,
    /* package_width        */ 12,
    /* package_length       */ .5,
    /* quantity_per_package */ 1
),
(
    /* product_root_id      */ 8,
    /* name                 */ 'Piglet - Lava Land',
    /* subtitle             */ 'Another solid math rock album',
    /* description          */ 'Arbitrary description can go here because real product descriptions are technically copywritten.',
    /* option_summary       */ '',
    /* sku                  */ 'lava-land',
    /* upc                  */ '',
    /* manufacturer         */ 'Record Company',
    /* brand                */ 'Piglet',
    /* quantity             */ 123,
    /* taxable              */ 'true',
    /* price                */ 12.34,
    /* on_sale              */ 'false',
    /* sale_price           */ 0.00,
    /* cost                 */ 5,
    /* product_weight       */ 1,
    /* product_height       */ 12,
    /* product_width        */ 12,
    /* product_length       */ .5,
    /* package_weight       */ 1,
    /* package_height       */ 12,
    /* package_width        */ 12,
    /* package_length       */ .5,
    /* quantity_per_package */ 1
),
(
    /* product_root_id      */ 9,
    /* name                 */ 'Tera Melos - Untitled',
    /* subtitle             */ 'Yet another solid math rock album',
    /* description          */ 'Arbitrary description can go here because real product descriptions are technically copywritten.',
    /* option_summary       */ '',
    /* sku                  */ 'untitled',
    /* upc                  */ '634457550513',
    /* manufacturer         */ 'Record Company',
    /* brand                */ 'Tera Melos',
    /* quantity             */ 123,
    /* taxable              */ 'true',
    /* price                */ 12.34,
    /* on_sale              */ 'false',
    /* sale_price           */ 0.00,
    /* cost                 */ 5,
    /* product_weight       */ 1,
    /* product_height       */ 12,
    /* product_width        */ 12,
    /* product_length       */ .5,
    /* package_weight       */ 1,
    /* package_height       */ 12,
    /* package_width        */ 12,
    /* package_length       */ .5,
    /* quantity_per_package */ 1
),
(
    /* product_root_id      */ 10,
    /* name                 */ 'Frank Zappa - Jazz From Hell',
    /* subtitle             */ 'A solid Zappa album',
    /* description          */ 'Arbitrary description can go here because real product descriptions are technically copywritten.',
    /* option_summary       */ '',
    /* sku                  */ 'jazz-from-hell',
    /* upc                  */ '013347420516',
    /* manufacturer         */ 'Record Company',
    /* brand                */ 'Frank Zappa',
    /* quantity             */ 123,
    /* taxable              */ 'true',
    /* price                */ 12.34,
    /* on_sale              */ 'false',
    /* sale_price           */ 0.00,
    /* cost                 */ 5,
    /* product_weight       */ 1,
    /* product_height       */ 12,
    /* product_width        */ 12,
    /* product_length       */ .5,
    /* package_weight       */ 1,
    /* package_height       */ 12,
    /* package_width        */ 12,
    /* package_length       */ .5,
    /* quantity_per_package */ 1
),
(
    /* product_root_id      */ 11,
    /* name                 */ 'CHON - Newborn Sun',
    /* subtitle             */ 'Yet another solid math rock album',
    /* description          */ 'Arbitrary description can go here because real product descriptions are technically copywritten.',
    /* option_summary       */ '',
    /* sku                  */ 'newborn-sun',
    /* upc                  */ '794558090315',
    /* manufacturer         */ 'Record Company',
    /* brand                */ 'CHON',
    /* quantity             */ 123,
    /* taxable              */ 'true',
    /* price                */ 12.34,
    /* on_sale              */ 'false',
    /* sale_price           */ 0.00,
    /* cost                 */ 5,
    /* product_weight       */ 1,
    /* product_height       */ 12,
    /* product_width        */ 12,
    /* product_length       */ .5,
    /* package_weight       */ 1,
    /* package_height       */ 12,
    /* package_width        */ 12,
    /* package_length       */ .5,
    /* quantity_per_package */ 1
);

INSERT INTO product_options
(
    "name",
    "product_root_id"
)
VALUES
('color', 1),
('size',  1 );

INSERT INTO product_option_values
(
    "product_option_id",
    "value"
)
VALUES
(1, 'red'   ),
(1, 'green' ),
(1, 'blue'  ),
(2, 'small' ),
(2, 'medium'),
(2, 'large' );

INSERT INTO product_variant_bridge
(
    "id",
    "product_id",
    "product_option_value_id"
)
VALUES
(1,  1, 1),
(2,  1, 4),
(3,  2, 1),
(4,  2, 5),
(5,  3, 1),
(6,  3, 6),
(7,  4, 3),
(8,  4, 4),
(9,  5, 3),
(10, 5, 5),
(11, 6, 3),
(12, 6, 6),
(13, 7, 2),
(14, 7, 4),
(15, 8, 2),
(16, 8, 5),
(17, 9, 2),
(18, 9, 6);

INSERT INTO discounts
(
    "name",
    "discount_type",
    "amount",
    "starts_on",
    "expires_on"
)
VALUES
(
    '10% off',
    'percentage',
    10.00,
    NOW(),
    NOW() + (1 * interval '1 month')
),
(
    '50% off',
    'percentage',
    50.00,
    NOW(),
    null
),
(
    'New customer special',
    'flat_amount',
    10.00,
    NOW(),
    null
);

INSERT INTO webhooks
(
    "url",
    "event_type"
)
VALUES
(
    'http://httpbin/status/200',
    'product_created'
),
(
    'http://httpbin/status/200',
    'product_updated'
),
(
    'http://httpbin/status/200',
    'product_archived'
);
`)

func _9999999999_example_dataUpSqlBytes() ([]byte, error) {
	return __9999999999_example_dataUpSql, nil
}

func _9999999999_example_dataUpSql() (*asset, error) {
	bytes, err := _9999999999_example_dataUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "9999999999_example_data.up.sql", size: 31030, mode: os.FileMode(420), modTime: time.Unix(1520775515, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bindataGo = []byte(`// Code generated by go-bindata.
// sources:
// 1495495688_products.down.sql
// 1495495688_products.up.sql
// 1496132528_discounts.down.sql
// 1496132528_discounts.up.sql
// 1498638543_auth.down.sql
// 1498638543_auth.up.sql
// 1512371453_webhooks.down.sql
// 1512371453_webhooks.up.sql
// 9999999999_example_data.down.sql
// 9999999999_example_data.up.sql
// bindata.go
// DO NOT EDIT!

package migrations

import (
	"fmt"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)
type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var __1495495688_productsDownSql = []byte(`+"`"+`DROP TABLE product_image_bridge;
DROP TABLE product_variant_bridge;
DROP TABLE product_option_values;
DROP TABLE product_options;
DROP TABLE products;
DROP TABLE product_images CASCADE;
DROP TABLE product_roots CASCADE;`+"`"+`)

func _1495495688_productsDownSqlBytes() ([]byte, error) {
	return __1495495688_productsDownSql, nil
}

func _1495495688_productsDownSql() (*asset, error) {
	bytes, err := _1495495688_productsDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "1495495688_products.down.sql", size: 219, mode: os.FileMode(420), modTime: time.Unix(1520775515, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __1495495688_productsUpSql = []byte(`+"`"+`CREATE TABLE IF NOT EXISTS product_roots (
    "id" bigserial,
    "name" text NOT NULL,
    "primary_image_id" bigint,
    "subtitle" text NOT NULL DEFAULT '',
    "description" text NOT NULL DEFAULT '',
    "sku_prefix" text NOT NULL,
    "manufacturer" text NOT NULL DEFAULT '',
    "brand" text NOT NULL DEFAULT '',
    "taxable" boolean NOT NULL DEFAULT 'false',
    "cost" numeric(15, 2) NOT NULL DEFAULT 0,
    "product_weight" numeric(15, 2) NOT NULL DEFAULT 0,
    "product_height" numeric(15, 2) NOT NULL DEFAULT 0,
    "product_width" numeric(15, 2) NOT NULL DEFAULT 0,
    "product_length" numeric(15, 2) NOT NULL DEFAULT 0,
    "package_weight" numeric(15, 2) NOT NULL DEFAULT 0,
    "package_height" numeric(15, 2) NOT NULL DEFAULT 0,
    "package_width" numeric(15, 2) NOT NULL DEFAULT 0,
    "package_length" numeric(15, 2) NOT NULL DEFAULT 0,
    "quantity_per_package" integer NOT NULL DEFAULT 1,
    "available_on" timestamp NOT NULL DEFAULT NOW(),
    "created_on" timestamp NOT NULL DEFAULT NOW(),
    "updated_on" timestamp,
    "archived_on" timestamp,
    UNIQUE ("sku_prefix", "archived_on"),
    PRIMARY KEY ("id")
);

CREATE TABLE IF NOT EXISTS products (
    "id" bigserial,
    "product_root_id" bigint NOT NULL,
    "primary_image_id" bigint,
    "name" text NOT NULL,
    "subtitle" text NOT NULL DEFAULT '',
    "description" text NOT NULL DEFAULT '',
    "option_summary" text NOT NULL DEFAULT '',
    "sku" text NOT NULL,
    "upc" text NOT NULL DEFAULT '',
    "manufacturer" text NOT NULL DEFAULT '',
    "brand" text NOT NULL DEFAULT '',
    "quantity" integer NOT NULL DEFAULT 0,
    "taxable" boolean NOT NULL DEFAULT 'false',
    "price" numeric(15, 2) NOT NULL,
    "on_sale" boolean NOT NULL DEFAULT 'false',
    "sale_price" numeric(15, 2) NOT NULL DEFAULT 0 CONSTRAINT sale_price_must_not_be_zero CHECK(
        (sale_price != 0 AND on_sale IS TRUE)
                         OR
        (sale_price  = 0 AND on_sale IS FALSE)
    ),
    "cost" numeric(15, 2) NOT NULL DEFAULT 0,
    "product_weight" numeric(15, 2) NOT NULL DEFAULT 0,
    "product_height" numeric(15, 2) NOT NULL DEFAULT 0,
    "product_width" numeric(15, 2) NOT NULL DEFAULT 0,
    "product_length" numeric(15, 2) NOT NULL DEFAULT 0,
    "package_weight" numeric(15, 2) NOT NULL DEFAULT 0,
    "package_height" numeric(15, 2) NOT NULL DEFAULT 0,
    "package_width" numeric(15, 2) NOT NULL DEFAULT 0,
    "package_length" numeric(15, 2) NOT NULL DEFAULT 0,
    "quantity_per_package" integer NOT NULL DEFAULT 1,
    "available_on" timestamp NOT NULL DEFAULT NOW(),
    "created_on" timestamp NOT NULL DEFAULT NOW(),
    "updated_on" timestamp,
    "archived_on" timestamp,
    UNIQUE ("sku", "archived_on"),
    PRIMARY KEY ("id"),
    FOREIGN KEY ("product_root_id") REFERENCES "product_roots"("id")
);
CREATE UNIQUE INDEX products_upc_empty_but_not_null_idx ON products (upc) WHERE upc != '';

CREATE TABLE IF NOT EXISTS product_images (
    "id" bigserial,
    "product_root_id" bigint NOT NULL,
    "thumbnail_url" text NOT NULL,
    "main_url" text NOT NULL,
    "original_url" text NOT NULL,
    "source_url" text NOT NULL DEFAULT '',
    "created_on" timestamp NOT NULL DEFAULT NOW(),
    "updated_on" timestamp,
    "archived_on" timestamp,
    PRIMARY KEY ("id"),
    FOREIGN KEY ("product_root_id") REFERENCES "product_roots"("id")
);

ALTER TABLE IF EXISTS "product_roots"
    ADD FOREIGN KEY ("primary_image_id") REFERENCES "product_images"("id");

ALTER TABLE IF EXISTS "products"
    ADD FOREIGN KEY ("primary_image_id") REFERENCES "product_images"("id");

CREATE TABLE IF NOT EXISTS product_image_bridge (
    "id" bigserial,
    "product_id" bigint NOT NULL,
    "product_image_id" bigint NOT NULL,
    UNIQUE ("product_id", "product_image_id"),
    PRIMARY KEY ("id"),
    FOREIGN KEY ("product_id") REFERENCES "products"("id"),
    FOREIGN KEY ("product_image_id") REFERENCES "product_images"("id")
);

CREATE TABLE IF NOT EXISTS product_options (
    "id" bigserial,
    "name" text NOT NULL,
    "product_root_id" bigint NOT NULL,
    "created_on" timestamp NOT NULL DEFAULT NOW(),
    "updated_on" timestamp,
    "archived_on" timestamp,
    UNIQUE ("product_root_id", "name"),
    UNIQUE ("name", "archived_on"),
    PRIMARY KEY ("id"),
    FOREIGN KEY ("product_root_id") REFERENCES "product_roots"("id")
);

CREATE TABLE IF NOT EXISTS product_option_values (
    "id" bigserial,
    "product_option_id" bigint NOT NULL,
    "value" text NOT NULL,
    "created_on" timestamp NOT NULL DEFAULT NOW(),
    "updated_on" timestamp,
    "archived_on" timestamp,
    UNIQUE ("product_option_id", "value"),
    UNIQUE ("value", "archived_on"),
    PRIMARY KEY ("id"),
    FOREIGN KEY ("product_option_id") REFERENCES "product_options"("id")
);

CREATE TABLE IF NOT EXISTS product_variant_bridge (
    "id" bigserial,
    "product_id" bigint NOT NULL,
    "product_option_value_id" bigint NOT NULL,
    "created_on" timestamp NOT NULL DEFAULT NOW(),
    "archived_on" timestamp,
    FOREIGN KEY ("product_id") REFERENCES "products"("id"),
    FOREIGN KEY ("product_option_value_id") REFERENCES "product_option_values"("id")
);`+"`"+`)

func _1495495688_productsUpSqlBytes() ([]byte, error) {
	return __1495495688_productsUpSql, nil
}

func _1495495688_productsUpSql() (*asset, error) {
	bytes, err := _1495495688_productsUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "1495495688_products.up.sql", size: 5151, mode: os.FileMode(420), modTime: time.Unix(1520775515, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __1496132528_discountsDownSql = []byte(`+"`"+`DROP TABLE discounts;
DROP TYPE discount_type CASCADE;`+"`"+`)

func _1496132528_discountsDownSqlBytes() ([]byte, error) {
	return __1496132528_discountsDownSql, nil
}

func _1496132528_discountsDownSql() (*asset, error) {
	bytes, err := _1496132528_discountsDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "1496132528_discounts.down.sql", size: 54, mode: os.FileMode(420), modTime: time.Unix(1520775515, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __1496132528_discountsUpSql = []byte(`+"`"+`CREATE TYPE discount_type AS ENUM ('percentage', 'flat_amount');
CREATE TABLE IF NOT EXISTS discounts (
    "id" bigserial,
    "name" text NOT NULL,
    "discount_type" discount_type NOT NULL DEFAULT 'percentage',
    "amount" numeric(15, 2) NOT NULL DEFAULT 0,
    "expires_on" timestamp,
    "requires_code" boolean NOT NULL DEFAULT FALSE,
    "code" text NOT NULL DEFAULT '' CONSTRAINT code_must_be_provided CHECK(
        (code != '' AND requires_code IS TRUE)
                        OR
        (code = '' AND requires_code IS FALSE)
    ),
    "limited_use" boolean NOT NULL DEFAULT FALSE,
    "number_of_uses" bigint NOT NULL DEFAULT 0 CONSTRAINT use_number_must_be_provided CHECK(
        (number_of_uses != 0 AND limited_use IS TRUE)
                            OR
        (number_of_uses = 0 AND limited_use IS FALSE)
    ),
    "login_required" boolean NOT NULL DEFAULT FALSE,
    "starts_on" timestamp NOT NULL DEFAULT NOW(),
    "created_on" timestamp NOT NULL DEFAULT NOW(),
    "updated_on" timestamp,
    "archived_on" timestamp,
    PRIMARY KEY ("id")
);`+"`"+`)

func _1496132528_discountsUpSqlBytes() ([]byte, error) {
	return __1496132528_discountsUpSql, nil
}

func _1496132528_discountsUpSql() (*asset, error) {
	bytes, err := _1496132528_discountsUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "1496132528_discounts.up.sql", size: 1072, mode: os.FileMode(420), modTime: time.Unix(1520775515, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __1498638543_authDownSql = []byte(`+"`"+`DROP TABLE password_reset_tokens;
DROP TABLE login_attempts;
DROP TABLE users;`+"`"+`)

func _1498638543_authDownSqlBytes() ([]byte, error) {
	return __1498638543_authDownSql, nil
}

func _1498638543_authDownSql() (*asset, error) {
	bytes, err := _1498638543_authDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "1498638543_auth.down.sql", size: 78, mode: os.FileMode(420), modTime: time.Unix(1520775515, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __1498638543_authUpSql = []byte(`+"`"+`CREATE TABLE IF NOT EXISTS users (
    "id" bigserial,
    "first_name" text NOT NULL,
    "last_name" text NOT NULL,
    "username" text NOT NULL,
    "email" text NOT NULL,
    "password" text NOT NULL,
    "is_admin" bool NOT NULL DEFAULT 'false',
    "password_last_changed_on" timestamp,
    "created_on" timestamp NOT NULL DEFAULT NOW(),
    "updated_on" timestamp,
    "archived_on" timestamp,
    UNIQUE ("username", "archived_on"),
    PRIMARY KEY ("id")
);

CREATE TABLE IF NOT EXISTS password_reset_tokens (
    "id" bigserial,
    "user_id" bigint NOT NULL,
    "token" text NOT NULL,
    "created_on" timestamp NOT NULL DEFAULT NOW(),
    "expires_on" timestamp NOT NULL DEFAULT NOW() + (15 * interval '1 minute'),
    "password_reset_on" timestamp,
    UNIQUE ("token"),
    PRIMARY KEY ("id"),
    FOREIGN KEY ("user_id") REFERENCES "users"("id")
);

CREATE TABLE IF NOT EXISTS login_attempts (
    "id" bigserial,
    "username" text NOT NULL,
    "successful" boolean NOT NULL DEFAULT 'false',
    "created_on" timestamp NOT NULL DEFAULT NOW()
)`+"`"+`)

func _1498638543_authUpSqlBytes() ([]byte, error) {
	return __1498638543_authUpSql, nil
}

func _1498638543_authUpSql() (*asset, error) {
	bytes, err := _1498638543_authUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "1498638543_auth.up.sql", size: 1062, mode: os.FileMode(420), modTime: time.Unix(1521205186, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __1512371453_webhooksDownSql = []byte(`+"`"+`DROP TABLE webhook_execution_logs;
DROP TABLE webhooks;
DROP TYPE webhook_event CASCADE;
DROP TYPE content_type CASCADE;`+"`"+`)

func _1512371453_webhooksDownSqlBytes() ([]byte, error) {
	return __1512371453_webhooksDownSql, nil
}

func _1512371453_webhooksDownSql() (*asset, error) {
	bytes, err := _1512371453_webhooksDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "1512371453_webhooks.down.sql", size: 120, mode: os.FileMode(420), modTime: time.Unix(1520775515, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __1512371453_webhooksUpSql = []byte(`+"`"+`CREATE TYPE webhook_event AS ENUM ('product_created', 'product_updated', 'product_archived');
CREATE TYPE content_type AS ENUM ('application/json', 'application/xml');

CREATE TABLE IF NOT EXISTS webhooks (
    "id" bigserial,
    "url" text NOT NULL,
    "event_type" webhook_event NOT NULL,
    "content_type" content_type NOT NULL DEFAULT 'application/json',
    "created_on" timestamp NOT NULL DEFAULT NOW(),
    "updated_on" timestamp,
    "archived_on" timestamp,
    PRIMARY KEY ("id")
);

CREATE TABLE IF NOT EXISTS webhook_execution_logs (
    "id" bigserial,
    "webhook_id" bigint NOT NULL,
    "status_code" int NOT NULL,
    "succeeded" boolean NOT NULL DEFAULT 'false',
    "executed_on" timestamp NOT NULL DEFAULT NOW(),
    PRIMARY KEY ("id"),
    FOREIGN KEY ("webhook_id") REFERENCES "webhooks"("id")
);`+"`"+`)

func _1512371453_webhooksUpSqlBytes() ([]byte, error) {
	return __1512371453_webhooksUpSql, nil
}

func _1512371453_webhooksUpSql() (*asset, error) {
	bytes, err := _1512371453_webhooksUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "1512371453_webhooks.up.sql", size: 822, mode: os.FileMode(420), modTime: time.Unix(1520775515, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __9999999999_example_dataDownSql = []byte(`+"`"+`DELETE FROM webhooks WHERE id IS NOT NULL;
DELETE FROM discounts WHERE id IS NOT NULL;
DELETE FROM product_variant_bridge WHERE id IS NOT NULL;
DELETE FROM product_option_values WHERE id IS NOT NULL;
DELETE FROM product_options WHERE id IS NOT NULL;
DELETE FROM products WHERE id IS NOT NULL;`+"`"+`)

func _9999999999_example_dataDownSqlBytes() ([]byte, error) {
	return __9999999999_example_dataDownSql, nil
}

func _9999999999_example_dataDownSql() (*asset, error) {
	bytes, err := _9999999999_example_dataDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "9999999999_example_data.down.sql", size: 292, mode: os.FileMode(420), modTime: time.Unix(1520775515, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __9999999999_example_dataUpSql = []byte(`+"`"+`INSERT INTO product_roots
(
    "name",
    "subtitle",
    "description",
    "sku_prefix",
    "manufacturer",
    "brand",
    "taxable",
    "cost",
    "product_weight",
    "product_height",
    "product_width",
    "product_length",
    "package_weight",
    "package_height",
    "package_width",
    "package_length",
    "quantity_per_package",
    "available_on"
)
VALUES
(
    /* name                 */ 'Your Favorite Band''s T-Shirt',
    /* subtitle             */ 'A t-shirt you can wear',
    /* description          */ 'Wear this if you''d like. Or don''t, I''m not in charge of your actions',
    /* sku_prefix           */ 't-shirt',
    /* manufacturer         */ 'Record Company',
    /* brand                */ 'Your Favorite Band',
    /* taxable              */ 'true',
    /* cost                 */ 20.00,
    /* product_weight       */ 1,
    /* product_height       */ 5,
    /* product_width        */ 5,
    /* product_length       */ 5,
    /* package_weight       */ 1,
    /* package_height       */ 5,
    /* package_width        */ 5,
    /* package_length       */ 5,
    /* quantity_per_package */ 1,
    /* available_on         */ NOW()
),
(
    /* name                 */ 'Sleeping People - Sleeping People',
    /* subtitle             */ 'A solid math rock album',
    /* description          */ 'Arbitrary description can go here because real product descriptions are technically copywritten.',
    /* sku_prefix           */ 'sleeping-people',
    /* manufacturer         */ 'Record Company',
    /* brand                */ 'Sleeping People',
    /* taxable              */ 'true',
    /* cost                 */ 5,
    /* product_weight       */ 1,
    /* product_height       */ 12,
    /* product_width        */ 12,
    /* product_length       */ .5,
    /* package_weight       */ 1,
    /* package_height       */ 12,
    /* package_width        */ 12,
    /* package_length       */ .5,
    /* quantity_per_package */ 1,
    /* available_on         */ NOW()
),
(
    /* name                 */ 'Jaga Jazzist - One Armed Bandit',
    /* subtitle             */ 'A solid jazz album',
    /* description          */ 'Arbitrary description can go here because real product descriptions are technically copywritten.',
    /* sku_prefix           */ 'one-armed-bandit',
    /* manufacturer         */ 'Record Company',
    /* brand                */ 'Jaga Jazzist',
    /* taxable              */ 'true',
    /* cost                 */ 5,
    /* product_weight       */ 1,
    /* product_height       */ 12,
    /* product_width        */ 12,
    /* product_length       */ .5,
    /* package_weight       */ 1,
    /* package_height       */ 12,
    /* package_width        */ 12,
    /* package_length       */ .5,
    /* quantity_per_package */ 1,
    /* available_on         */ NOW()
),
(
    /* name                 */ 'Cloudkicker - Let Yourself Be Huge',
    /* subtitle             */ 'A solid instrumental album',
    /* description          */ 'Arbitrary description can go here because real product descriptions are technically copywritten.',
    /* sku_prefix           */ 'let-yourself-be-huge',
    /* manufacturer         */ 'Record Company',
    /* brand                */ 'Cloudkicker',
    /* taxable              */ 'true',
    /* cost                 */ 5,
    /* product_weight       */ 1,
    /* product_height       */ 12,
    /* product_width        */ 12,
    /* product_length       */ .5,
    /* package_weight       */ 1,
    /* package_height       */ 12,
    /* package_width        */ 12,
    /* package_length       */ .5,
    /* quantity_per_package */ 1,
    /* available_on         */ NOW()
),
(
    /* name                 */ 'Animals As Leaders - The Joy Of Motion',
    /* subtitle             */ 'A solid prog metal album',
    /* description          */ 'Arbitrary description can go here because real product descriptions are technically copywritten.',
    /* sku_prefix           */ 'the-joy-of-motion',
    /* manufacturer         */ 'Record Company',
    /* brand                */ 'Animals As Leaders',
    /* taxable              */ 'true',
    /* cost                 */ 5,
    /* product_weight       */ 1,
    /* product_height       */ 12,
    /* product_width        */ 12,
    /* product_length       */ .5,
    /* package_weight       */ 1,
    /* package_height       */ 12,
    /* package_width        */ 12,
    /* package_length       */ .5,
    /* quantity_per_package */ 1,
    /* available_on         */ NOW()
),
(
    /* name                 */ 'Mort Garson - Mother Earth''s Plantasia',
    /* subtitle             */ 'A solid synth album',
    /* description          */ 'Arbitrary description can go here because real product descriptions are technically copywritten.',
    /* sku_prefix           */ 'mother-earths-plantasia',
    /* manufacturer         */ 'Record Company',
    /* brand                */ 'Mort Garson',
    /* taxable              */ 'true',
    /* cost                 */ 5,
    /* product_weight       */ 1,
    /* product_height       */ 12,
    /* product_width        */ 12,
    /* product_length       */ .5,
    /* package_weight       */ 1,
    /* package_height       */ 12,
    /* package_width        */ 12,
    /* package_length       */ .5,
    /* quantity_per_package */ 1,
    /* available_on         */ NOW()
),
(
    /* name                 */ 'Camel - The Snow Goose',
    /* subtitle             */ 'A solid prog rock album',
    /* description          */ 'Arbitrary description can go here because real product descriptions are technically copywritten.',
    /* sku_prefix           */ 'the-snow-goose',
    /* manufacturer         */ 'Record Company',
    /* brand                */ 'Camel',
    /* taxable              */ 'true',
    /* cost                 */ 5,
    /* product_weight       */ 1,
    /* product_height       */ 12,
    /* product_width        */ 12,
    /* product_length       */ .5,
    /* package_weight       */ 1,
    /* package_height       */ 12,
    /* package_width        */ 12,
    /* package_length       */ .5,
    /* quantity_per_package */ 1,
    /* available_on         */ NOW()
),
(
    /* name                 */ 'Piglet - Lava Land',
    /* subtitle             */ 'Another solid math rock album',
    /* description          */ 'Arbitrary description can go here because real product descriptions are technically copywritten.',
    /* sku_prefix           */ 'lava-land',
    /* manufacturer         */ 'Record Company',
    /* brand                */ 'Piglet',
    /* taxable              */ 'true',
    /* cost                 */ 5,
    /* product_weight       */ 1,
    /* product_height       */ 12,
    /* product_width        */ 12,
    /* product_length       */ .5,
    /* package_weight       */ 1,
    /* package_height       */ 12,
    /* package_width        */ 12,
    /* package_length       */ .5,
    /* quantity_per_package */ 1,
    /* available_on         */ NOW()
),
(
    /* name                 */ 'Tera Melos - Untitled',
    /* subtitle             */ 'Yet another solid math rock album',
    /* description          */ 'Arbitrary description can go here because real product descriptions are technically copywritten.',
    /* sku_prefix           */ 'untitled',
    /* manufacturer         */ 'Record Company',
    /* brand                */ 'Tera Melos',
    /* taxable              */ 'true',
    /* cost                 */ 5,
    /* product_weight       */ 1,
    /* product_height       */ 12,
    /* product_width        */ 12,
    /* product_length       */ .5,
    /* package_weight       */ 1,
    /* package_height       */ 12,
    /* package_width        */ 12,
    /* package_length       */ .5,
    /* quantity_per_package */ 1,
    /* available_on         */ NOW()
),
(
    /* name                 */ 'Frank Zappa - Jazz From Hell',
    /* subtitle             */ 'A solid Zappa album',
    /* description          */ 'Arbitrary description can go here because real product descriptions are technically copywritten.',
    /* sku_prefix           */ 'jazz-from-hell',
    /* manufacturer         */ 'Record Company',
    /* brand                */ 'Frank Zappa',
    /* taxable              */ 'true',
    /* cost                 */ 5,
    /* product_weight       */ 1,
    /* product_height       */ 12,
    /* product_width        */ 12,
    /* product_length       */ .5,
    /* package_weight       */ 1,
    /* package_height       */ 12,
    /* package_width        */ 12,
    /* package_length       */ .5,
    /* quantity_per_package */ 1,
    /* available_on         */ NOW()
),
(
    /* name                 */ 'CHON - Newborn Sun',
    /* subtitle             */ 'Yet another solid math rock album',
    /* description          */ 'Arbitrary description can go here because real product descriptions are technically copywritten.',
    /* sku_prefix           */ 'newborn-sun',
    /* manufacturer         */ 'Record Company',
    /* brand                */ 'CHON',
    /* taxable              */ 'true',
    /* cost                 */ 5,
    /* product_weight       */ 1,
    /* product_height       */ 12,
    /* product_width        */ 12,
    /* product_length       */ .5,
    /* package_weight       */ 1,
    /* package_height       */ 12,
    /* package_width        */ 12,
    /* package_length       */ .5,
    /* quantity_per_package */ 1,
    /* available_on         */ NOW()
);

INSERT INTO products
(
    "product_root_id",
    "name",
    "subtitle",
    "description",
    "option_summary",
    "sku",
    "upc",
    "manufacturer",
    "brand",
    "quantity",
    "taxable",
    "price",
    "on_sale",
    "sale_price",
    "cost",
    "product_weight",
    "product_height",
    "product_width",
    "product_length",
    "package_weight",
    "package_height",
    "package_width",
    "package_length",
    "quantity_per_package"
)
VALUES
(
    /* product_root_id      */ 1,
    /* name                 */ 'Your Favorite Band''s T-Shirt',
    /* subtitle             */ 'A t-shirt you can wear',
    /* description          */ 'Wear this if you''d like. Or don''t, I''m not in charge of your actions',
    /* option_summary       */ 'Size: Small, Color: Red',
    /* sku                  */ 't-shirt-small-red',
    /* upc                  */ '',
    /* manufacturer         */ 'Record Company',
    /* brand                */ 'Your Favorite Band',
    /* quantity             */ 666,
    /* taxable              */ 'true',
    /* price                */ 20.00,
    /* on_sale              */ 'false',
    /* sale_price           */ 0.00,
    /* cost                 */ 10,
    /* product_weight       */ 1,
    /* product_height       */ 5,
    /* product_width        */ 5,
    /* product_length       */ 5,
    /* package_weight       */ 1,
    /* package_height       */ 5,
    /* package_width        */ 5,
    /* package_length       */ 5,
    /* quantity_per_package */ 1
),
(
    /* product_root_id      */ 1,
    /* name                 */ 'Your Favorite Band''s T-Shirt',
    /* subtitle             */ 'A t-shirt you can wear',
    /* description          */ 'Wear this if you''d like. Or don''t, I''m not in charge of your actions',
    /* option_summary       */ 'Size: Medium, Color: Red',
    /* sku                  */ 't-shirt-medium-red',
    /* upc                  */ '',
    /* manufacturer         */ 'Record Company',
    /* brand                */ 'Your Favorite Band',
    /* quantity             */ 666,
    /* taxable              */ 'true',
    /* price                */ 20.00,
    /* on_sale              */ 'false',
    /* sale_price           */ 0.00,
    /* cost                 */ 10,
    /* product_weight       */ 1,
    /* product_height       */ 5,
    /* product_width        */ 5,
    /* product_length       */ 5,
    /* package_weight       */ 1,
    /* package_height       */ 5,
    /* package_width        */ 5,
    /* package_length       */ 5,
    /* quantity_per_package */ 1
),
(
    /* product_root_id      */ 1,
    /* name                 */ 'Your Favorite Band''s T-Shirt',
    /* subtitle             */ 'A t-shirt you can wear',
    /* description          */ 'Wear this if you''d like. Or don''t, I''m not in charge of your actions',
    /* option_summary       */ 'Size: Large, Color: Red',
    /* sku                  */ 't-shirt-large-red',
    /* upc                  */ '',
    /* manufacturer         */ 'Record Company',
    /* brand                */ 'Your Favorite Band',
    /* quantity             */ 666,
    /* taxable              */ 'true',
    /* price                */ 20.00,
    /* on_sale              */ 'false',
    /* sale_price           */ 0.00,
    /* cost                 */ 10,
    /* product_weight       */ 1,
    /* product_height       */ 5,
    /* product_width        */ 5,
    /* product_length       */ 5,
    /* package_weight       */ 1,
    /* package_height       */ 5,
    /* package_width        */ 5,
    /* package_length       */ 5,
    /* quantity_per_package */ 1
),
(
    /* product_root_id      */ 1,
    /* name                 */ 'Your Favorite Band''s T-Shirt',
    /* subtitle             */ 'A t-shirt you can wear',
    /* description          */ 'Wear this if you''d like. Or don''t, I''m not in charge of your actions',
    /* option_summary       */ 'Size: Small, Color: Blue',
    /* sku                  */ 't-shirt-small-blue',
    /* upc                  */ '',
    /* manufacturer         */ 'Record Company',
    /* brand                */ 'Your Favorite Band',
    /* quantity             */ 666,
    /* taxable              */ 'true',
    /* price                */ 20.00,
    /* on_sale              */ 'false',
    /* sale_price           */ 0.00,
    /* cost                 */ 10,
    /* product_weight       */ 1,
    /* product_height       */ 5,
    /* product_width        */ 5,
    /* product_length       */ 5,
    /* package_weight       */ 1,
    /* package_height       */ 5,
    /* package_width        */ 5,
    /* package_length       */ 5,
    /* quantity_per_package */ 1
),
(
    /* product_root_id      */ 1,
    /* name                 */ 'Your Favorite Band''s T-Shirt',
    /* subtitle             */ 'A t-shirt you can wear',
    /* description          */ 'Wear this if you''d like. Or don''t, I''m not in charge of your actions',
    /* option_summary       */ 'Size: Medium, Color: Blue',
    /* sku                  */ 't-shirt-medium-blue',
    /* upc                  */ '',
    /* manufacturer         */ 'Record Company',
    /* brand                */ 'Your Favorite Band',
    /* quantity             */ 666,
    /* taxable              */ 'true',
    /* price                */ 20.00,
    /* on_sale              */ 'false',
    /* sale_price           */ 0.00,
    /* cost                 */ 10,
    /* product_weight       */ 1,
    /* product_height       */ 5,
    /* product_width        */ 5,
    /* product_length       */ 5,
    /* package_weight       */ 1,
    /* package_height       */ 5,
    /* package_width        */ 5,
    /* package_length       */ 5,
    /* quantity_per_package */ 1
),
(
    /* product_root_id      */ 1,
    /* name                 */ 'Your Favorite Band''s T-Shirt',
    /* subtitle             */ 'A t-shirt you can wear',
    /* description          */ 'Wear this if you''d like. Or don''t, I''m not in charge of your actions',
    /* option_summary       */ 'Size: Large, Color: Blue',
    /* sku                  */ 't-shirt-large-blue',
    /* upc                  */ '',
    /* manufacturer         */ 'Record Company',
    /* brand                */ 'Your Favorite Band',
    /* quantity             */ 666,
    /* taxable              */ 'true',
    /* price                */ 20.00,
    /* on_sale              */ 'false',
    /* sale_price           */ 0.00,
    /* cost                 */ 10,
    /* product_weight       */ 1,
    /* product_height       */ 5,
    /* product_width        */ 5,
    /* product_length       */ 5,
    /* package_weight       */ 1,
    /* package_height       */ 5,
    /* package_width        */ 5,
    /* package_length       */ 5,
    /* quantity_per_package */ 1
),
(
    /* product_root_id      */ 1,
    /* name                 */ 'Your Favorite Band''s T-Shirt',
    /* subtitle             */ 'A t-shirt you can wear',
    /* description          */ 'Wear this if you''d like. Or don''t, I''m not in charge of your actions',
    /* option_summary       */ 'Size: Small, Color: Green',
    /* sku                  */ 't-shirt-small-green',
    /* upc                  */ '',
    /* manufacturer         */ 'Record Company',
    /* brand                */ 'Your Favorite Band',
    /* quantity             */ 666,
    /* taxable              */ 'true',
    /* price                */ 20.00,
    /* on_sale              */ 'false',
    /* sale_price           */ 0.00,
    /* cost                 */ 10,
    /* product_weight       */ 1,
    /* product_height       */ 5,
    /* product_width        */ 5,
    /* product_length       */ 5,
    /* package_weight       */ 1,
    /* package_height       */ 5,
    /* package_width        */ 5,
    /* package_length       */ 5,
    /* quantity_per_package */ 1
),
(
    /* product_root_id      */ 1,
    /* name                 */ 'Your Favorite Band''s T-Shirt',
    /* subtitle             */ 'A t-shirt you can wear',
    /* description          */ 'Wear this if you''d like. Or don''t, I''m not in charge of your actions',
    /* option_summary       */ 'Size: Medium, Color: Green',
    /* sku                  */ 't-shirt-medium-green',
    /* upc                  */ '',
    /* manufacturer         */ 'Record Company',
    /* brand                */ 'Your Favorite Band',
    /* quantity             */ 666,
    /* taxable              */ 'true',
    /* price                */ 20.00,
    /* on_sale              */ 'false',
    /* sale_price           */ 0.00,
    /* cost                 */ 10,
    /* product_weight       */ 1,
    /* product_height       */ 5,
    /* product_width        */ 5,
    /* product_length       */ 5,
    /* package_weight       */ 1,
    /* package_height       */ 5,
    /* package_width        */ 5,
    /* package_length       */ 5,
    /* quantity_per_package */ 1
),
(
    /* product_root_id      */ 1,
    /* name                 */ 'Your Favorite Band''s T-Shirt',
    /* subtitle             */ 'A t-shirt you can wear',
    /* description          */ 'Wear this if you''d like. Or don''t, I''m not in charge of your actions',
    /* option_summary       */ 'Size: Large, Color: Green',
    /* sku                  */ 't-shirt-large-green',
    /* upc                  */ '',
    /* manufacturer         */ 'Record Company',
    /* brand                */ 'Your Favorite Band',
    /* quantity             */ 666,
    /* taxable              */ 'true',
    /* price                */ 20.00,
    /* on_sale              */ 'false',
    /* sale_price           */ 0.00,
    /* cost                 */ 10,
    /* product_weight       */ 1,
    /* product_height       */ 5,
    /* product_width        */ 5,
    /* product_length       */ 5,
    /* package_weight       */ 1,
    /* package_height       */ 5,
    /* package_width        */ 5,
    /* package_length       */ 5,
    /* quantity_per_package */ 1
),(
    /* product_root_id      */ 2,
    /* name                 */ 'Sleeping People - Sleeping People',
    /* subtitle             */ 'A solid math rock album',
    /* description          */ 'Arbitrary description can go here because real product descriptions are technically copywritten.',
    /* option_summary       */ '',
    /* sku                  */ 'sleeping-people',
    /* upc                  */ '656605908410',
    /* manufacturer         */ 'Record Company',
    /* brand                */ 'Sleeping People',
    /* quantity             */ 123,
    /* taxable              */ 'true',
    /* price                */ 12.34,
    /* on_sale              */ 'false',
    /* sale_price           */ 0.00,
    /* cost                 */ 5,
    /* product_weight       */ 1,
    /* product_height       */ 12,
    /* product_width        */ 12,
    /* product_length       */ .5,
    /* package_weight       */ 1,
    /* package_height       */ 12,
    /* package_width        */ 12,
    /* package_length       */ .5,
    /* quantity_per_package */ 1
),
(
    /* product_root_id      */ 3,
    /* name                 */ 'Jaga Jazzist - One Armed Bandit',
    /* subtitle             */ 'A solid jazz album',
    /* description          */ 'Arbitrary description can go here because real product descriptions are technically copywritten.',
    /* option_summary       */ '',
    /* sku                  */ 'one-armed-bandit',
    /* upc                  */ '5021392578187',
    /* manufacturer         */ 'Record Company',
    /* brand                */ 'Jaga Jazzist',
    /* quantity             */ 123,
    /* taxable              */ 'true',
    /* price                */ 12.34,
    /* on_sale              */ 'false',
    /* sale_price           */ 0.00,
    /* cost                 */ 5,
    /* product_weight       */ 1,
    /* product_height       */ 12,
    /* product_width        */ 12,
    /* product_length       */ .5,
    /* package_weight       */ 1,
    /* package_height       */ 12,
    /* package_width        */ 12,
    /* package_length       */ .5,
    /* quantity_per_package */ 1
),
(
    /* product_root_id      */ 4,
    /* name                 */ 'Cloudkicker - Let Yourself Be Huge',
    /* subtitle             */ 'A solid instrumental album',
    /* description          */ 'Arbitrary description can go here because real product descriptions are technically copywritten.',
    /* option_summary       */ '',
    /* sku                  */ 'let-yourself-be-huge',
    /* upc                  */ '',
    /* manufacturer         */ 'Record Company',
    /* brand                */ 'Cloudkicker',
    /* quantity             */ 123,
    /* taxable              */ 'true',
    /* price                */ 12.34,
    /* on_sale              */ 'false',
    /* sale_price           */ 0.00,
    /* cost                 */ 5,
    /* product_weight       */ 1,
    /* product_height       */ 12,
    /* product_width        */ 12,
    /* product_length       */ .5,
    /* package_weight       */ 1,
    /* package_height       */ 12,
    /* package_width        */ 12,
    /* package_length       */ .5,
    /* quantity_per_package */ 1
),
(
    /* product_root_id      */ 5,
    /* name                 */ 'Animals As Leaders - The Joy Of Motion',
    /* subtitle             */ 'A solid prog metal album',
    /* description          */ 'Arbitrary description can go here because real product descriptions are technically copywritten.',
    /* option_summary       */ '',
    /* sku                  */ 'the-joy-of-motion',
    /* upc                  */ '817424013895',
    /* manufacturer         */ 'Record Company',
    /* brand                */ 'Animals As Leaders',
    /* quantity             */ 123,
    /* taxable              */ 'true',
    /* price                */ 12.34,
    /* on_sale              */ 'false',
    /* sale_price           */ 0.00,
    /* cost                 */ 5,
    /* product_weight       */ 1,
    /* product_height       */ 12,
    /* product_width        */ 12,
    /* product_length       */ .5,
    /* package_weight       */ 1,
    /* package_height       */ 12,
    /* package_width        */ 12,
    /* package_length       */ .5,
    /* quantity_per_package */ 1
),
(
    /* product_root_id      */ 6,
    /* name                 */ 'Mort Garson - Mother Earth''s Plantasia',
    /* subtitle             */ 'A solid synth album',
    /* description          */ 'Arbitrary description can go here because real product descriptions are technically copywritten.',
    /* option_summary       */ '',
    /* sku                  */ 'mother-earths-plantasia',
    /* upc                  */ '5291103812552',
    /* manufacturer         */ 'Record Company',
    /* brand                */ 'Mort Garson',
    /* quantity             */ 123,
    /* taxable              */ 'true',
    /* price                */ 12.34,
    /* on_sale              */ 'false',
    /* sale_price           */ 0.00,
    /* cost                 */ 5,
    /* product_weight       */ 1,
    /* product_height       */ 12,
    /* product_width        */ 12,
    /* product_length       */ .5,
    /* package_weight       */ 1,
    /* package_height       */ 12,
    /* package_width        */ 12,
    /* package_length       */ .5,
    /* quantity_per_package */ 1
),
(
    /* product_root_id      */ 7,
    /* name                 */ 'Camel - The Snow Goose',
    /* subtitle             */ 'A solid prog rock album',
    /* description          */ 'Arbitrary description can go here because real product descriptions are technically copywritten.',
    /* option_summary       */ '',
    /* sku                  */ 'the-snow-goose',
    /* upc                  */ '600753356661',
    /* manufacturer         */ 'Record Company',
    /* brand                */ 'Camel',
    /* quantity             */ 123,
    /* taxable              */ 'true',
    /* price                */ 12.34,
    /* on_sale              */ 'false',
    /* sale_price           */ 0.00,
    /* cost                 */ 5,
    /* product_weight       */ 1,
    /* product_height       */ 12,
    /* product_width        */ 12,
    /* product_length       */ .5,
    /* package_weight       */ 1,
    /* package_height       */ 12,
    /* package_width        */ 12,
    /* package_length       */ .5,
    /* quantity_per_package */ 1
),
(
    /* product_root_id      */ 8,
    /* name                 */ 'Piglet - Lava Land',
    /* subtitle             */ 'Another solid math rock album',
    /* description          */ 'Arbitrary description can go here because real product descriptions are technically copywritten.',
    /* option_summary       */ '',
    /* sku                  */ 'lava-land',
    /* upc                  */ '',
    /* manufacturer         */ 'Record Company',
    /* brand                */ 'Piglet',
    /* quantity             */ 123,
    /* taxable              */ 'true',
    /* price                */ 12.34,
    /* on_sale              */ 'false',
    /* sale_price           */ 0.00,
    /* cost                 */ 5,
    /* product_weight       */ 1,
    /* product_height       */ 12,
    /* product_width        */ 12,
    /* product_length       */ .5,
    /* package_weight       */ 1,
    /* package_height       */ 12,
    /* package_width        */ 12,
    /* package_length       */ .5,
    /* quantity_per_package */ 1
),
(
    /* product_root_id      */ 9,
    /* name                 */ 'Tera Melos - Untitled',
    /* subtitle             */ 'Yet another solid math rock album',
    /* description          */ 'Arbitrary description can go here because real product descriptions are technically copywritten.',
    /* option_summary       */ '',
    /* sku                  */ 'untitled',
    /* upc                  */ '634457550513',
    /* manufacturer         */ 'Record Company',
    /* brand                */ 'Tera Melos',
    /* quantity             */ 123,
    /* taxable              */ 'true',
    /* price                */ 12.34,
    /* on_sale              */ 'false',
    /* sale_price           */ 0.00,
    /* cost                 */ 5,
    /* product_weight       */ 1,
    /* product_height       */ 12,
    /* product_width        */ 12,
    /* product_length       */ .5,
    /* package_weight       */ 1,
    /* package_height       */ 12,
    /* package_width        */ 12,
    /* package_length       */ .5,
    /* quantity_per_package */ 1
),
(
    /* product_root_id      */ 10,
    /* name                 */ 'Frank Zappa - Jazz From Hell',
    /* subtitle             */ 'A solid Zappa album',
    /* description          */ 'Arbitrary description can go here because real product descriptions are technically copywritten.',
    /* option_summary       */ '',
    /* sku                  */ 'jazz-from-hell',
    /* upc                  */ '013347420516',
    /* manufacturer         */ 'Record Company',
    /* brand                */ 'Frank Zappa',
    /* quantity             */ 123,
    /* taxable              */ 'true',
    /* price                */ 12.34,
    /* on_sale              */ 'false',
    /* sale_price           */ 0.00,
    /* cost                 */ 5,
    /* product_weight       */ 1,
    /* product_height       */ 12,
    /* product_width        */ 12,
    /* product_length       */ .5,
    /* package_weight       */ 1,
    /* package_height       */ 12,
    /* package_width        */ 12,
    /* package_length       */ .5,
    /* quantity_per_package */ 1
),
(
    /* product_root_id      */ 11,
    /* name                 */ 'CHON - Newborn Sun',
    /* subtitle             */ 'Yet another solid math rock album',
    /* description          */ 'Arbitrary description can go here because real product descriptions are technically copywritten.',
    /* option_summary       */ '',
    /* sku                  */ 'newborn-sun',
    /* upc                  */ '794558090315',
    /* manufacturer         */ 'Record Company',
    /* brand                */ 'CHON',
    /* quantity             */ 123,
    /* taxable              */ 'true',
    /* price                */ 12.34,
    /* on_sale              */ 'false',
    /* sale_price           */ 0.00,
    /* cost                 */ 5,
    /* product_weight       */ 1,
    /* product_height       */ 12,
    /* product_width        */ 12,
    /* product_length       */ .5,
    /* package_weight       */ 1,
    /* package_height       */ 12,
    /* package_width        */ 12,
    /* package_length       */ .5,
    /* quantity_per_package */ 1
);

INSERT INTO product_options
(
    "name",
    "product_root_id"
)
VALUES
('color', 1),
('size',  1 );

INSERT INTO product_option_values
(
    "product_option_id",
    "value"
)
VALUES
(1, 'red'   ),
(1, 'green' ),
(1, 'blue'  ),
(2, 'small' ),
(2, 'medium'),
(2, 'large' );

INSERT INTO product_variant_bridge
(
    "id",
    "product_id",
    "product_option_value_id"
)
VALUES
(1,  1, 1),
(2,  1, 4),
(3,  2, 1),
(4,  2, 5),
(5,  3, 1),
(6,  3, 6),
(7,  4, 3),
(8,  4, 4),
(9,  5, 3),
(10, 5, 5),
(11, 6, 3),
(12, 6, 6),
(13, 7, 2),
(14, 7, 4),
(15, 8, 2),
(16, 8, 5),
(17, 9, 2),
(18, 9, 6);

INSERT INTO discounts
(
    "name",
    "discount_type",
    "amount",
    "starts_on",
    "expires_on"
)
VALUES
(
    '10% off',
    'percentage',
    10.00,
    NOW(),
    NOW() + (1 * interval '1 month')
),
(
    '50% off',
    'percentage',
    50.00,
    NOW(),
    null
),
(
    'New customer special',
    'flat_amount',
    10.00,
    NOW(),
    null
);

INSERT INTO webhooks
(
    "url",
    "event_type"
)
VALUES
(
    'http://httpbin/status/200',
    'product_created'
),
(
    'http://httpbin/status/200',
    'product_updated'
),
(
    'http://httpbin/status/200',
    'product_archived'
);
`+"`"+``)

func bindataGoBytes() ([]byte, error) {
	return _bindataGo, nil
}

func bindataGo() (*asset, error) {
	bytes, err := bindataGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bindata.go", size: 91070, mode: os.FileMode(420), modTime: time.Unix(1526606774, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"1495495688_products.down.sql": _1495495688_productsDownSql,
	"1495495688_products.up.sql": _1495495688_productsUpSql,
	"1496132528_discounts.down.sql": _1496132528_discountsDownSql,
	"1496132528_discounts.up.sql": _1496132528_discountsUpSql,
	"1498638543_auth.down.sql": _1498638543_authDownSql,
	"1498638543_auth.up.sql": _1498638543_authUpSql,
	"1512371453_webhooks.down.sql": _1512371453_webhooksDownSql,
	"1512371453_webhooks.up.sql": _1512371453_webhooksUpSql,
	"9999999999_example_data.down.sql": _9999999999_example_dataDownSql,
	"9999999999_example_data.up.sql": _9999999999_example_dataUpSql,
	"bindata.go": bindataGo,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"1495495688_products.down.sql": &bintree{_1495495688_productsDownSql, map[string]*bintree{}},
	"1495495688_products.up.sql": &bintree{_1495495688_productsUpSql, map[string]*bintree{}},
	"1496132528_discounts.down.sql": &bintree{_1496132528_discountsDownSql, map[string]*bintree{}},
	"1496132528_discounts.up.sql": &bintree{_1496132528_discountsUpSql, map[string]*bintree{}},
	"1498638543_auth.down.sql": &bintree{_1498638543_authDownSql, map[string]*bintree{}},
	"1498638543_auth.up.sql": &bintree{_1498638543_authUpSql, map[string]*bintree{}},
	"1512371453_webhooks.down.sql": &bintree{_1512371453_webhooksDownSql, map[string]*bintree{}},
	"1512371453_webhooks.up.sql": &bintree{_1512371453_webhooksUpSql, map[string]*bintree{}},
	"9999999999_example_data.down.sql": &bintree{_9999999999_example_dataDownSql, map[string]*bintree{}},
	"9999999999_example_data.up.sql": &bintree{_9999999999_example_dataUpSql, map[string]*bintree{}},
	"bindata.go": &bintree{bindataGo, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

