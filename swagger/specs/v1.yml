swagger: '2.0'
info:
  description: No description
  version: 1.0.0
  title: Testing
  contact: {}
host: example.dairycart.org
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  /health:
    get:
      summary: Health Check
      parameters: []
      responses:
        '200':
          description: Status 200
  '/v1/user/{user_id}':
    delete:
      summary: User
      parameters: []
      responses:
        '200':
          description: Status 200
          schema:
            $ref: '#/definitions/UserResponse'
    parameters:
      - name: user_id
        in: path
        required: true
        type: integer
  /v1/product_roots:
    get:
      summary: List Product Roots
      parameters: []
      responses:
        '200':
          description: Status 200
          schema:
            $ref: '#/definitions/ProductRootListResponse'
  '/v1/product_root/{product_root_id}':
    get:
      summary: Product Root
      parameters: []
      responses:
        '200':
          description: Status 200
          schema:
            $ref: '#/definitions/ProductRootResponse'
    delete:
      summary: Product Root
      parameters: []
      responses:
        '200':
          description: Status 200
          schema:
            $ref: '#/definitions/ProductRootResponse'
    parameters:
      - name: product_root_id
        in: path
        required: true
        type: integer
  /v1/products:
    get:
      summary: List Products
      produces:
        - application/json
      parameters:
        - name: page
          in: query
          required: false
          type: integer
          description: Page in the list of entries you want. Defaults to 1.
          x-example: page=3
        - name: limit
          in: query
          required: false
          type: integer
          description: Number of entries you want per page. Defaults to 25. Max is 50.
          x-example: limit=20
        - name: updated_after
          in: query
          required: false
          type: integer
          description: >-
            The time, in Unix time, that you want to be the minimum updated date
            for products in the response. Defaults to never.
          x-example: updated_after=1527532275
        - name: updated_before
          in: query
          required: false
          type: integer
          description: >-
            The time, in Unix time, that you want to be the maximum updated date
            for products in the response. Defaults to never.
          x-example: updated_before=1527532275
        - name: created_after
          in: query
          required: false
          type: integer
          description: >-
            The time, in Unix time, that you want to be the minimum creation
            date for products in the response. Defaults to never.
          x-example: created_after=1527532275
        - name: created_before
          in: query
          required: false
          type: integer
          description: >-
            The time, in Unix time, that you want to be the maximum creation
            date for products in the response. Defaults to never.
          x-example: created_before=1527532275
      responses:
        '200':
          description: Status 200
          schema:
            $ref: '#/definitions/ProductListResponse'
        '400':
          description: Status 400
        '500':
          description: An issue has occurred that is not due to user error.
  /v1/product:
    post:
      summary: Create Product
      consumes: []
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ProductCreationInput'
      responses:
        '200':
          description: Status 200
  '/v1/product/{sku}':
    get:
      summary: Product by SKU
      parameters: []
      responses:
        '200':
          description: Status 200
          schema:
            $ref: '#/definitions/ProductResponse'
    head:
      summary: Product Existence
      parameters: []
      responses:
        '200':
          description: Status 200
        '404':
          description: Status 404
    delete:
      summary: Archive Product
      parameters: []
      responses:
        '200':
          description: Status 200
          schema:
            $ref: '#/definitions/ProductResponse'
    patch:
      summary: Update Product
      consumes: []
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ProductUpdateInput'
      responses:
        '200':
          description: Status 200
          schema:
            $ref: '#/definitions/ProductResponse'
    parameters:
      - name: sku
        in: path
        required: true
        type: string
  '/v1/product_options/{option_id}':
    delete:
      summary: Delete Product Option
      parameters: []
      responses:
        '200':
          description: Status 200
          schema:
            $ref: '#/definitions/ProductOptionResponse'
    patch:
      summary: Update Product Option
      consumes: []
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ProductOptionUpdateInput'
      responses:
        '200':
          description: Status 200
          schema:
            $ref: '#/definitions/ProductOptionResponse'
    parameters:
      - name: option_id
        in: path
        required: true
        type: integer
  '/v1/product_root/{product_root_id}/options':
    get:
      summary: List Product Root Options
      parameters: []
      responses:
        '200':
          description: Status 200
          schema:
            $ref: '#/definitions/ProductOptionsListResponse'
    post:
      summary: Add Options To Product Root
      consumes: []
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ProductOptionCreationInput'
      responses:
        '200':
          description: Status 200
          schema:
            $ref: '#/definitions/ProductOptionResponse'
    parameters:
      - name: product_root_id
        in: path
        required: true
        type: integer
  '/v1/product_options/{option_id}/value':
    post:
      summary: Create Product Option Value
      consumes: []
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ProductOptionValueUpsertInput'
      responses:
        '200':
          description: Status 200
          schema:
            $ref: '#/definitions/ProductOptionValueResponse'
    parameters:
      - name: option_id
        in: path
        required: true
        type: integer
  '/v1/product_option_values/{option_value_id}':
    delete:
      summary: Delete Option Value
      parameters: []
      responses:
        '200':
          description: Status 200
          schema:
            $ref: '#/definitions/ProductOptionValueResponse'
    patch:
      summary: Update Option Value
      consumes: []
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ProductOptionValueUpsertInput'
      responses:
        '200':
          description: Status 200
          schema:
            $ref: '#/definitions/ProductOptionValueResponse'
    parameters:
      - name: option_value_id
        in: path
        required: true
        type: integer
  /v1/discounts:
    get:
      summary: List Discounts
      produces:
        - application/json
      parameters:
        - name: page
          in: query
          required: false
          type: integer
          description: Page in the list of entries you want. Defaults to 1.
          x-example: page=3
        - name: limit
          in: query
          required: false
          type: integer
          description: Number of entries you want per page. Defaults to 25. Max is 50.
          x-example: limit=20
        - name: updated_after
          in: query
          required: false
          type: integer
          description: >-
            The time, in Unix time, that you want to be the minimum updated date
            for products in the response. Defaults to never.
          x-example: updated_after=1527532275
        - name: updated_before
          in: query
          required: false
          type: integer
          description: >-
            The time, in Unix time, that you want to be the maximum updated date
            for products in the response. Defaults to never.
          x-example: updated_before=1527532275
        - name: created_after
          in: query
          required: false
          type: integer
          description: >-
            The time, in Unix time, that you want to be the minimum creation
            date for products in the response. Defaults to never.
          x-example: created_after=1527532275
        - name: created_before
          in: query
          required: false
          type: integer
          description: >-
            The time, in Unix time, that you want to be the maximum creation
            date for products in the response. Defaults to never.
          x-example: created_before=1527532275
      responses:
        '200':
          description: Status 200
          schema:
            $ref: '#/definitions/DiscountListResponse'
        '400':
          description: Status 400
        '500':
          description: An issue has occurred that is not due to user error.
  '/v1/discount/{discount_id}':
    get:
      summary: Discount
      parameters: []
      responses:
        '200':
          description: Status 200
          schema:
            $ref: '#/definitions/DiscountResponse'
    delete:
      summary: Archive Discount
      parameters: []
      responses:
        '200':
          description: Status 200
          schema:
            $ref: '#/definitions/DiscountResponse'
    patch:
      summary: Update Discount
      consumes: []
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DiscountCreateOrUpdateInput'
      responses:
        '200':
          description: Status 200
          schema:
            $ref: '#/definitions/DiscountResponse'
    parameters:
      - name: discount_id
        in: path
        required: true
        type: integer
  /v1/discount:
    post:
      summary: Create Discount
      consumes: []
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DiscountCreateOrUpdateInput'
      responses:
        '200':
          description: Status 200
          schema:
            $ref: '#/definitions/DiscountResponse'
  /v1/webhooks:
    get:
      summary: List Webhooks
      produces:
        - application/json
      parameters:
        - name: page
          in: query
          required: false
          type: integer
          description: Page in the list of entries you want. Defaults to 1.
          x-example: page=3
        - name: limit
          in: query
          required: false
          type: integer
          description: Number of entries you want per page. Defaults to 25. Max is 50.
          x-example: limit=20
        - name: updated_after
          in: query
          required: false
          type: integer
          description: >-
            The time, in Unix time, that you want to be the minimum updated date
            for products in the response. Defaults to never.
          x-example: updated_after=1527532275
        - name: updated_before
          in: query
          required: false
          type: integer
          description: >-
            The time, in Unix time, that you want to be the maximum updated date
            for products in the response. Defaults to never.
          x-example: updated_before=1527532275
        - name: created_after
          in: query
          required: false
          type: integer
          description: >-
            The time, in Unix time, that you want to be the minimum creation
            date for products in the response. Defaults to never.
          x-example: created_after=1527532275
        - name: created_before
          in: query
          required: false
          type: integer
          description: >-
            The time, in Unix time, that you want to be the maximum creation
            date for products in the response. Defaults to never.
          x-example: created_before=1527532275
      responses:
        '200':
          description: Status 200
          schema:
            $ref: '#/definitions/WebhookListResponse'
        '400':
          description: Status 400
        '500':
          description: An issue has occurred that is not due to user error.
  /v1/webhook:
    post:
      summary: Create Webhook
      consumes: []
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/WebhookUpsertInput'
      responses:
        '200':
          description: Status 200
          schema:
            $ref: '#/definitions/WebhookResponse'
  '/v1/webhook/{webhook_id}':
    delete:
      summary: Archive Webhook
      parameters: []
      responses:
        '200':
          description: Status 200
          schema:
            $ref: '#/definitions/WebhookResponse'
    patch:
      summary: Update Webhook
      consumes: []
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/WebhookUpsertInput'
      responses:
        '200':
          description: Status 200
          schema:
            $ref: '#/definitions/WebhookResponse'
    parameters:
      - name: webhook_id
        in: path
        required: true
        type: integer
definitions:
  DiscountType:
    type: string
    enum:
      - percentage
      - flat_amount
  WebhookEventType:
    type: string
    enum:
      - product_created
      - product_updated
      - product_archived
  WebhookResponseContentType:
    type: string
    enum:
      - application/json
      - application/xml
  UserResponse:
    type: object
    properties:
      id:
        type: integer
      first_name:
        type: string
      last_name:
        type: string
      username:
        type: string
      email:
        type: string
      is_admin:
        type: boolean
      password_last_changed_on:
        type: string
        format: date-time
      created_on:
        type: string
        format: date-time
      updated_on:
        type: string
        format: date-time
      archived_on:
        type: string
        format: date-time
  ProductRootListResponse:
    type: object
    required:
      - count
      - data
      - limit
      - page
    properties:
      count:
        type: integer
        description: The number of products in the current response
      limit:
        type: integer
        description: The limit the user requested
      page:
        type: integer
        description: The page the user requested
      data:
        type: array
        description: The data requested by the user.
        items:
          $ref: '#/definitions/ProductRootResponse'
  ProductRootResponse:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
      primary_image_id:
        type: integer
      subtitle:
        type: string
      description:
        type: string
      sku_prefix:
        type: string
      manufacturer:
        type: string
      brand:
        type: string
      taxable:
        type: boolean
      cost:
        type: number
      product_weight:
        type: number
      product_height:
        type: number
      product_width:
        type: number
      product_length:
        type: number
      package_weight:
        type: number
      package_height:
        type: number
      package_width:
        type: number
      package_length:
        type: number
      quantity_per_package:
        type: integer
      available_on:
        type: string
        format: date-time
      created_on:
        type: string
        format: date-time
      updated_on:
        type: string
        format: date-time
      archived_on:
        type: string
        format: date-time
      options:
        type: array
        items:
          $ref: '#/definitions/ProductOptionResponse'
      images:
        type: array
        items:
          $ref: '#/definitions/ProductImageResponse'
      products:
        type: array
        items:
          type: string
  ProductImageResponse:
    type: object
    required:
      - created_on
      - id
      - main_url
      - original_url
      - product_root_id
      - thumbnail_url
    properties:
      id:
        type: integer
      product_root_id:
        type: integer
      thumbnail_url:
        type: string
        description: URL of the thumbnail-sized product image
      main_url:
        type: string
        description: URL of the primary product image
      original_url:
        type: string
        description: URL of the original product image
      source_url:
        type: string
        description: >-
          if a URL was the source of the product image, this will be what is
          stored.
      created_on:
        type: string
        format: date-time
      updated_on:
        type: string
        format: date-time
      archived_on:
        type: string
        format: date-time
  ProductImageCreationInput:
    type: object
    required:
      - data
      - type
    properties:
      is_primary:
        type: boolean
      type:
        type: string
        description: Can be one of "base64" or "url"
      data:
        type: string
        description: >-
          In the event the type is "base64", this field should contain the
          base64 encoded image data


          in the event the type is "url", this field should contain the source
          URL for the image
  ProductUpdateInput:
    type: object
    required:
      - sku
    properties:
      product_root_id:
        type: integer
      primary_image_id:
        type: integer
      name:
        type: string
      subtitle:
        type: string
      description:
        type: string
      option_summary:
        type: string
      sku:
        type: string
      upc:
        type: string
      manufacturer:
        type: string
      brand:
        type: string
      quantity:
        type: integer
      taxable:
        type: boolean
      price:
        type: number
      on_sale:
        type: boolean
      sale_price:
        type: number
      cost:
        type: number
      product_weight:
        type: number
      product_height:
        type: number
      product_width:
        type: number
      product_length:
        type: number
      package_weight:
        type: number
      package_height:
        type: number
      package_width:
        type: number
      package_length:
        type: number
      quantity_per_package:
        type: integer
      available_on:
        type: string
        format: date-time
  ProductResponse:
    type: object
    required:
      - sku
    properties:
      id:
        type: integer
      product_root_id:
        type: number
      primary_image_id:
        type: integer
      name:
        type: string
      subtitle:
        type: string
      description:
        type: string
      option_summary:
        type: string
      sku:
        type: string
      upc:
        type: string
      manufacturer:
        type: string
      brand:
        type: string
      quantity:
        type: integer
      taxable:
        type: boolean
      price:
        type: number
      on_sale:
        type: boolean
      sale_price:
        type: number
      cost:
        type: number
      product_weight:
        type: number
      product_height:
        type: number
      product_width:
        type: number
      product_length:
        type: number
      package_weight:
        type: number
      package_height:
        type: number
      package_width:
        type: number
      package_length:
        type: number
      quantity_per_package:
        type: integer
      available_on:
        type: string
        format: date-time
      created_on:
        type: string
        format: date-time
      updated_on:
        type: string
        format: date-time
        description: Nullable.
      archived_on:
        type: string
        format: date-time
        description: Nullable.
      images:
        type: array
        items:
          $ref: '#/definitions/ProductImageResponse'
      applicable_options:
        type: array
        items:
          $ref: '#/definitions/ProductOptionValueResponse'
  ProductListResponse:
    type: object
    required:
      - count
      - data
      - limit
      - page
    properties:
      count:
        type: integer
        description: The number of products in the current response
      limit:
        type: integer
        description: The limit the user requested
      page:
        type: integer
        description: The page the user requested
      data:
        type: array
        description: The data requested by the user.
        items:
          $ref: '#/definitions/ProductResponse'
  ProductCreationInput:
    type: object
    required:
      - quantity_per_package
      - sku
    properties:
      name:
        type: string
      subtitle:
        type: string
      description:
        type: string
      option_summary:
        type: string
      sku:
        type: string
      upc:
        type: string
      manufacturer:
        type: string
      brand:
        type: string
      quantity:
        type: integer
      taxable:
        type: boolean
      price:
        type: number
      on_sale:
        type: boolean
      sale_price:
        type: number
      cost:
        type: number
      product_weight:
        type: number
      product_height:
        type: number
      product_width:
        type: number
      product_length:
        type: number
      package_weight:
        type: number
      package_height:
        type: number
      package_width:
        type: number
      package_length:
        type: number
      quantity_per_package:
        type: integer
      available_on:
        type: string
        format: date-time
      images:
        type: array
        items:
          $ref: '#/definitions/ProductImageCreationInput'
      options:
        type: array
        items:
          $ref: '#/definitions/ProductOptionCreationInput'
  ProductOptionUpdateInput:
    type: object
    properties:
      name:
        type: string
      product_root_id:
        type: integer
  ProductOptionCreationInput:
    type: object
    properties:
      name:
        type: string
      values:
        type: array
        description: >-
          the valid values for the option. If for instance, the option's name
          was "color", then values could be something like ["red", "blue",
          "green"]
        items:
          type: string
  ProductOptionsListResponse:
    type: object
    properties:
      count:
        type: integer
      limit:
        type: integer
      page:
        type: integer
      data:
        type: array
        items:
          $ref: '#/definitions/ProductOptionResponse'
  ProductOptionResponse:
    type: object
    properties:
      id:
        type: integer
      name:
        type: integer
      product_root_id:
        type: integer
      created_on:
        type: string
        format: date-time
      updated_on:
        type: string
        format: date-time
      archived_on:
        type: string
        format: date-time
      values:
        type: array
        items:
          $ref: '#/definitions/ProductOptionValueResponse'
  ProductOptionValueResponse:
    type: object
    properties:
      id:
        type: integer
      product_option_id:
        type: integer
      value:
        type: string
      created_on:
        type: string
        format: date-time
      updated_on:
        type: string
        format: date-time
        description: Nullable.
      archived_on:
        type: string
        format: date-time
        description: Nullable.
  ProductOptionValueUpsertInput:
    type: object
    properties:
      value:
        type: string
  DiscountResponse:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
      discount_type:
        type: string
      amount:
        type: number
      expires_on:
        type: string
        format: date-time
        description: Nullable. Defaults to now.
      requires_code:
        type: boolean
      code:
        type: string
        description: Required if requires_code is set to true
      limited_use:
        type: boolean
      number_of_uses:
        type: number
        description: Required if limited use is set to true
      login_required:
        type: boolean
      starts_on:
        type: string
        format: date-time
      created_on:
        type: string
        format: date-time
      updated_on:
        type: string
        format: date-time
        description: Nullable.
      archived_on:
        type: string
        format: date-time
        description: Nullable.
  DiscountListResponse:
    type: object
    required:
      - count
      - data
      - limit
      - page
    properties:
      count:
        type: integer
        description: The number of products in the current response
      limit:
        type: integer
        description: The limit the user requested
      page:
        type: integer
        description: The page the user requested
      data:
        type: array
        description: The data requested by the user.
        items:
          $ref: '#/definitions/DiscountResponse'
  DiscountCreateOrUpdateInput:
    type: object
    properties:
      name:
        type: string
      discount_type:
        type: string
      amount:
        type: number
      expires_on:
        type: string
        format: date-time
        description: Nullable. Defaults to now.
      requires_code:
        type: boolean
      code:
        type: string
        description: Required if requires_code is set to true
      limited_use:
        type: boolean
      number_of_uses:
        type: number
        description: Required if limited use is set to true
      login_required:
        type: boolean
      starts_on:
        type: string
        format: date-time
  WebhookListResponse:
    type: object
    required:
      - count
      - data
      - limit
      - page
    properties:
      count:
        type: integer
        description: The number of products in the current response
      limit:
        type: integer
        description: The limit the user requested
      page:
        type: integer
        description: The page the user requested
      data:
        type: array
        description: The data requested by the user.
        items:
          $ref: '#/definitions/WebhookResponse'
  WebhookResponse:
    type: object
    properties:
      id:
        type: integer
      url:
        type: string
      event_type:
        type: string
      content_type:
        type: string
      created_on:
        type: string
      updated_on:
        type: string
        format: date-time
        description: Nullable.
      archived_on:
        type: string
        format: date-time
        description: Nullable.
  WebhookUpsertInput:
    type: object
    properties:
      url:
        type: string
      event_type:
        type: string
      content_type:
        type: string
